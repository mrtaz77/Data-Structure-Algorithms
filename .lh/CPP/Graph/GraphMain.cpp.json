{
    "sourceFile": "CPP/Graph/GraphMain.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 35,
            "patches": [
                {
                    "date": 1686152439407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1686152452166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+#include<bits/stdc++.h>\r\n \r\n int main(){\r\n \r\n     freopen(\"input.txt\", \"r\", stdin);\r\n"
                },
                {
                    "date": 1686152459233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,91 @@\n+#include<bits/stdc++.h>\r\n+#include\r\n+int main(){\r\n+\r\n+    freopen(\"input.txt\", \"r\", stdin);\r\n+    freopen(\"output.txt\", \"w\", stdout);\r\n+\r\n+\r\n+    int n,m,start;\r\n+    cin>>n>>m;\r\n+    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n+    for(int i=0;i<m;i++){\r\n+        int u,v;\r\n+        double w;\r\n+        cin>>u>>v>>w;\r\n+        addEdge(adj,u,v,w);\r\n+    }\r\n+    print(adj,n);\r\n+\r\n+    cin>>start;\r\n+\r\n+    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n+    \r\n+    cout<<\"BFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<bfsTree.size();i++){\r\n+        int v = bfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsTree[i].first==v){\r\n+            cout<<bfsTree[i].second;\r\n+            i = i+1;\r\n+            if(bfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"BFS all :\\n\";\r\n+\r\n+    for(int i=0;i<bfsAll.size();i++){\r\n+        int v = bfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsAll[i].first==v){\r\n+            cout<<bfsAll[i].second;\r\n+            i = i+1;\r\n+            if(bfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n+    \r\n+    cout<<\"DFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<dfsTree.size();i++){\r\n+        int v = dfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsTree[i].first==v){\r\n+            cout<<dfsTree[i].second;\r\n+            i = i+1;\r\n+            if(dfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"DFS all :\\n\";\r\n+\r\n+    for(int i=0;i<dfsAll.size();i++){\r\n+        int v = dfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsAll[i].first==v){\r\n+            cout<<dfsAll[i].second;\r\n+            i = i+1;\r\n+            if(dfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n+\r\n+    delete[]adj;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686152479969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n #include<bits/stdc++.h>\r\n-#include\r\n+#include\"BFS\"\r\n int main(){\r\n \r\n     freopen(\"input.txt\", \"r\", stdin);\r\n     freopen(\"output.txt\", \"w\", stdout);\r\n@@ -87,96 +87,5 @@\n \r\n     cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n \r\n     delete[]adj;\r\n-}\n-#include<bits/stdc++.h>\r\n-\r\n-int main(){\r\n-\r\n-    freopen(\"input.txt\", \"r\", stdin);\r\n-    freopen(\"output.txt\", \"w\", stdout);\r\n-\r\n-\r\n-    int n,m,start;\r\n-    cin>>n>>m;\r\n-    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n-    for(int i=0;i<m;i++){\r\n-        int u,v;\r\n-        double w;\r\n-        cin>>u>>v>>w;\r\n-        addEdge(adj,u,v,w);\r\n-    }\r\n-    print(adj,n);\r\n-\r\n-    cin>>start;\r\n-\r\n-    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n-    \r\n-    cout<<\"BFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<bfsTree.size();i++){\r\n-        int v = bfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsTree[i].first==v){\r\n-            cout<<bfsTree[i].second;\r\n-            i = i+1;\r\n-            if(bfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"BFS all :\\n\";\r\n-\r\n-    for(int i=0;i<bfsAll.size();i++){\r\n-        int v = bfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsAll[i].first==v){\r\n-            cout<<bfsAll[i].second;\r\n-            i = i+1;\r\n-            if(bfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n-    \r\n-    cout<<\"DFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<dfsTree.size();i++){\r\n-        int v = dfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsTree[i].first==v){\r\n-            cout<<dfsTree[i].second;\r\n-            i = i+1;\r\n-            if(dfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"DFS all :\\n\";\r\n-\r\n-    for(int i=0;i<dfsAll.size();i++){\r\n-        int v = dfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsAll[i].first==v){\r\n-            cout<<dfsAll[i].second;\r\n-            i = i+1;\r\n-            if(dfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n-\r\n-    delete[]adj;\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686152485815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,92 @@\n+#include<bits/stdc++.h>\r\n+#include\"BFSDFS.h\"\r\n+\r\n+int main(){\r\n+\r\n+    freopen(\"input.txt\", \"r\", stdin);\r\n+    freopen(\"output.txt\", \"w\", stdout);\r\n+\r\n+\r\n+    int n,m,start;\r\n+    cin>>n>>m;\r\n+    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n+    for(int i=0;i<m;i++){\r\n+        int u,v;\r\n+        double w;\r\n+        cin>>u>>v>>w;\r\n+        addEdge(adj,u,v,w);\r\n+    }\r\n+    print(adj,n);\r\n+\r\n+    cin>>start;\r\n+\r\n+    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n+    \r\n+    cout<<\"BFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<bfsTree.size();i++){\r\n+        int v = bfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsTree[i].first==v){\r\n+            cout<<bfsTree[i].second;\r\n+            i = i+1;\r\n+            if(bfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"BFS all :\\n\";\r\n+\r\n+    for(int i=0;i<bfsAll.size();i++){\r\n+        int v = bfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsAll[i].first==v){\r\n+            cout<<bfsAll[i].second;\r\n+            i = i+1;\r\n+            if(bfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n+    \r\n+    cout<<\"DFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<dfsTree.size();i++){\r\n+        int v = dfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsTree[i].first==v){\r\n+            cout<<dfsTree[i].second;\r\n+            i = i+1;\r\n+            if(dfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"DFS all :\\n\";\r\n+\r\n+    for(int i=0;i<dfsAll.size();i++){\r\n+        int v = dfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsAll[i].first==v){\r\n+            cout<<dfsAll[i].second;\r\n+            i = i+1;\r\n+            if(dfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n+\r\n+    delete[]adj;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686152594363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,92 @@\n+#include<bits/stdc++.h>\r\n+#include\"BFSDFS.h\"\r\n+#include\r\n+int main(){\r\n+\r\n+    freopen(\"input.txt\", \"r\", stdin);\r\n+    freopen(\"output.txt\", \"w\", stdout);\r\n+\r\n+\r\n+    int n,m,start;\r\n+    cin>>n>>m;\r\n+    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n+    for(int i=0;i<m;i++){\r\n+        int u,v;\r\n+        double w;\r\n+        cin>>u>>v>>w;\r\n+        addEdge(adj,u,v,w);\r\n+    }\r\n+    print(adj,n);\r\n+\r\n+    cin>>start;\r\n+\r\n+    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n+    \r\n+    cout<<\"BFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<bfsTree.size();i++){\r\n+        int v = bfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsTree[i].first==v){\r\n+            cout<<bfsTree[i].second;\r\n+            i = i+1;\r\n+            if(bfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"BFS all :\\n\";\r\n+\r\n+    for(int i=0;i<bfsAll.size();i++){\r\n+        int v = bfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsAll[i].first==v){\r\n+            cout<<bfsAll[i].second;\r\n+            i = i+1;\r\n+            if(bfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n+    \r\n+    cout<<\"DFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<dfsTree.size();i++){\r\n+        int v = dfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsTree[i].first==v){\r\n+            cout<<dfsTree[i].second;\r\n+            i = i+1;\r\n+            if(dfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"DFS all :\\n\";\r\n+\r\n+    for(int i=0;i<dfsAll.size();i++){\r\n+        int v = dfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsAll[i].first==v){\r\n+            cout<<dfsAll[i].second;\r\n+            i = i+1;\r\n+            if(dfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n+\r\n+    delete[]adj;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686152600864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,92 @@\n+#include<bits/stdc++.h>\r\n+#include\"BFSDFS.h\"\r\n+#include\"CheckCycles.h\"\r\n+int main(){\r\n+\r\n+    freopen(\"input.txt\", \"r\", stdin);\r\n+    freopen(\"output.txt\", \"w\", stdout);\r\n+\r\n+\r\n+    int n,m,start;\r\n+    cin>>n>>m;\r\n+    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n+    for(int i=0;i<m;i++){\r\n+        int u,v;\r\n+        double w;\r\n+        cin>>u>>v>>w;\r\n+        addEdge(adj,u,v,w);\r\n+    }\r\n+    print(adj,n);\r\n+\r\n+    cin>>start;\r\n+\r\n+    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n+    \r\n+    cout<<\"BFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<bfsTree.size();i++){\r\n+        int v = bfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsTree[i].first==v){\r\n+            cout<<bfsTree[i].second;\r\n+            i = i+1;\r\n+            if(bfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"BFS all :\\n\";\r\n+\r\n+    for(int i=0;i<bfsAll.size();i++){\r\n+        int v = bfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsAll[i].first==v){\r\n+            cout<<bfsAll[i].second;\r\n+            i = i+1;\r\n+            if(bfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n+    \r\n+    cout<<\"DFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<dfsTree.size();i++){\r\n+        int v = dfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsTree[i].first==v){\r\n+            cout<<dfsTree[i].second;\r\n+            i = i+1;\r\n+            if(dfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"DFS all :\\n\";\r\n+\r\n+    for(int i=0;i<dfsAll.size();i++){\r\n+        int v = dfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsAll[i].first==v){\r\n+            cout<<dfsAll[i].second;\r\n+            i = i+1;\r\n+            if(dfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n+\r\n+    delete[]adj;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686152608546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,93 @@\n+#include<bits/stdc++.h>\r\n+#include\"BFSDFS.h\"\r\n+#include\"CheckCycle.h\"\r\n+using namespace std;\r\n+int main(){\r\n+\r\n+    freopen(\"input.txt\", \"r\", stdin);\r\n+    freopen(\"output.txt\", \"w\", stdout);\r\n+\r\n+\r\n+    int n,m,start;\r\n+    cin>>n>>m;\r\n+    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n+    for(int i=0;i<m;i++){\r\n+        int u,v;\r\n+        double w;\r\n+        cin>>u>>v>>w;\r\n+        addEdge(adj,u,v,w);\r\n+    }\r\n+    print(adj,n);\r\n+\r\n+    cin>>start;\r\n+\r\n+    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n+    \r\n+    cout<<\"BFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<bfsTree.size();i++){\r\n+        int v = bfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsTree[i].first==v){\r\n+            cout<<bfsTree[i].second;\r\n+            i = i+1;\r\n+            if(bfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"BFS all :\\n\";\r\n+\r\n+    for(int i=0;i<bfsAll.size();i++){\r\n+        int v = bfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsAll[i].first==v){\r\n+            cout<<bfsAll[i].second;\r\n+            i = i+1;\r\n+            if(bfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n+    \r\n+    cout<<\"DFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<dfsTree.size();i++){\r\n+        int v = dfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsTree[i].first==v){\r\n+            cout<<dfsTree[i].second;\r\n+            i = i+1;\r\n+            if(dfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"DFS all :\\n\";\r\n+\r\n+    for(int i=0;i<dfsAll.size();i++){\r\n+        int v = dfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsAll[i].first==v){\r\n+            cout<<dfsAll[i].second;\r\n+            i = i+1;\r\n+            if(dfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n+\r\n+    delete[]adj;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686152658933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n #include<bits/stdc++.h>\r\n+\r\n #include\"BFSDFS.h\"\r\n #include\"CheckCycle.h\"\r\n using namespace std;\r\n int main(){\r\n@@ -89,372 +90,5 @@\n \r\n     cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n \r\n     delete[]adj;\r\n-}\n-#include<bits/stdc++.h>\r\n-#include\"BFSDFS.h\"\r\n-#include\"CheckCycles.h\"\r\n-int main(){\r\n-\r\n-    freopen(\"input.txt\", \"r\", stdin);\r\n-    freopen(\"output.txt\", \"w\", stdout);\r\n-\r\n-\r\n-    int n,m,start;\r\n-    cin>>n>>m;\r\n-    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n-    for(int i=0;i<m;i++){\r\n-        int u,v;\r\n-        double w;\r\n-        cin>>u>>v>>w;\r\n-        addEdge(adj,u,v,w);\r\n-    }\r\n-    print(adj,n);\r\n-\r\n-    cin>>start;\r\n-\r\n-    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n-    \r\n-    cout<<\"BFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<bfsTree.size();i++){\r\n-        int v = bfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsTree[i].first==v){\r\n-            cout<<bfsTree[i].second;\r\n-            i = i+1;\r\n-            if(bfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"BFS all :\\n\";\r\n-\r\n-    for(int i=0;i<bfsAll.size();i++){\r\n-        int v = bfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsAll[i].first==v){\r\n-            cout<<bfsAll[i].second;\r\n-            i = i+1;\r\n-            if(bfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n-    \r\n-    cout<<\"DFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<dfsTree.size();i++){\r\n-        int v = dfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsTree[i].first==v){\r\n-            cout<<dfsTree[i].second;\r\n-            i = i+1;\r\n-            if(dfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"DFS all :\\n\";\r\n-\r\n-    for(int i=0;i<dfsAll.size();i++){\r\n-        int v = dfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsAll[i].first==v){\r\n-            cout<<dfsAll[i].second;\r\n-            i = i+1;\r\n-            if(dfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n-\r\n-    delete[]adj;\r\n-}\n-#include<bits/stdc++.h>\r\n-#include\"BFSDFS.h\"\r\n-#include\r\n-int main(){\r\n-\r\n-    freopen(\"input.txt\", \"r\", stdin);\r\n-    freopen(\"output.txt\", \"w\", stdout);\r\n-\r\n-\r\n-    int n,m,start;\r\n-    cin>>n>>m;\r\n-    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n-    for(int i=0;i<m;i++){\r\n-        int u,v;\r\n-        double w;\r\n-        cin>>u>>v>>w;\r\n-        addEdge(adj,u,v,w);\r\n-    }\r\n-    print(adj,n);\r\n-\r\n-    cin>>start;\r\n-\r\n-    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n-    \r\n-    cout<<\"BFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<bfsTree.size();i++){\r\n-        int v = bfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsTree[i].first==v){\r\n-            cout<<bfsTree[i].second;\r\n-            i = i+1;\r\n-            if(bfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"BFS all :\\n\";\r\n-\r\n-    for(int i=0;i<bfsAll.size();i++){\r\n-        int v = bfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsAll[i].first==v){\r\n-            cout<<bfsAll[i].second;\r\n-            i = i+1;\r\n-            if(bfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n-    \r\n-    cout<<\"DFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<dfsTree.size();i++){\r\n-        int v = dfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsTree[i].first==v){\r\n-            cout<<dfsTree[i].second;\r\n-            i = i+1;\r\n-            if(dfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"DFS all :\\n\";\r\n-\r\n-    for(int i=0;i<dfsAll.size();i++){\r\n-        int v = dfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsAll[i].first==v){\r\n-            cout<<dfsAll[i].second;\r\n-            i = i+1;\r\n-            if(dfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n-\r\n-    delete[]adj;\r\n-}\n-#include<bits/stdc++.h>\r\n-#include\"BFSDFS.h\"\r\n-\r\n-int main(){\r\n-\r\n-    freopen(\"input.txt\", \"r\", stdin);\r\n-    freopen(\"output.txt\", \"w\", stdout);\r\n-\r\n-\r\n-    int n,m,start;\r\n-    cin>>n>>m;\r\n-    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n-    for(int i=0;i<m;i++){\r\n-        int u,v;\r\n-        double w;\r\n-        cin>>u>>v>>w;\r\n-        addEdge(adj,u,v,w);\r\n-    }\r\n-    print(adj,n);\r\n-\r\n-    cin>>start;\r\n-\r\n-    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n-    \r\n-    cout<<\"BFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<bfsTree.size();i++){\r\n-        int v = bfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsTree[i].first==v){\r\n-            cout<<bfsTree[i].second;\r\n-            i = i+1;\r\n-            if(bfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"BFS all :\\n\";\r\n-\r\n-    for(int i=0;i<bfsAll.size();i++){\r\n-        int v = bfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsAll[i].first==v){\r\n-            cout<<bfsAll[i].second;\r\n-            i = i+1;\r\n-            if(bfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n-    \r\n-    cout<<\"DFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<dfsTree.size();i++){\r\n-        int v = dfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsTree[i].first==v){\r\n-            cout<<dfsTree[i].second;\r\n-            i = i+1;\r\n-            if(dfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"DFS all :\\n\";\r\n-\r\n-    for(int i=0;i<dfsAll.size();i++){\r\n-        int v = dfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsAll[i].first==v){\r\n-            cout<<dfsAll[i].second;\r\n-            i = i+1;\r\n-            if(dfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n-\r\n-    delete[]adj;\r\n-}\n-#include<bits/stdc++.h>\r\n-#include\"BFS\"\r\n-int main(){\r\n-\r\n-    freopen(\"input.txt\", \"r\", stdin);\r\n-    freopen(\"output.txt\", \"w\", stdout);\r\n-\r\n-\r\n-    int n,m,start;\r\n-    cin>>n>>m;\r\n-    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n-    for(int i=0;i<m;i++){\r\n-        int u,v;\r\n-        double w;\r\n-        cin>>u>>v>>w;\r\n-        addEdge(adj,u,v,w);\r\n-    }\r\n-    print(adj,n);\r\n-\r\n-    cin>>start;\r\n-\r\n-    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n-    \r\n-    cout<<\"BFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<bfsTree.size();i++){\r\n-        int v = bfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsTree[i].first==v){\r\n-            cout<<bfsTree[i].second;\r\n-            i = i+1;\r\n-            if(bfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"BFS all :\\n\";\r\n-\r\n-    for(int i=0;i<bfsAll.size();i++){\r\n-        int v = bfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsAll[i].first==v){\r\n-            cout<<bfsAll[i].second;\r\n-            i = i+1;\r\n-            if(bfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n-    \r\n-    cout<<\"DFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<dfsTree.size();i++){\r\n-        int v = dfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsTree[i].first==v){\r\n-            cout<<dfsTree[i].second;\r\n-            i = i+1;\r\n-            if(dfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"DFS all :\\n\";\r\n-\r\n-    for(int i=0;i<dfsAll.size();i++){\r\n-        int v = dfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsAll[i].first==v){\r\n-            cout<<dfsAll[i].second;\r\n-            i = i+1;\r\n-            if(dfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n-\r\n-    delete[]adj;\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686152664482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+#include<bits/stdc++.h>\r\n+#include\r\n+#include\"BFSDFS.h\"\r\n+#include\"CheckCycle.h\"\r\n+using namespace std;\r\n+int main(){\r\n+\r\n+    freopen(\"input.txt\", \"r\", stdin);\r\n+    freopen(\"output.txt\", \"w\", stdout);\r\n+\r\n+\r\n+    int n,m,start;\r\n+    cin>>n>>m;\r\n+    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n+    for(int i=0;i<m;i++){\r\n+        int u,v;\r\n+        double w;\r\n+        cin>>u>>v>>w;\r\n+        addEdge(adj,u,v,w);\r\n+    }\r\n+    print(adj,n);\r\n+\r\n+    cin>>start;\r\n+\r\n+    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n+    \r\n+    cout<<\"BFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<bfsTree.size();i++){\r\n+        int v = bfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsTree[i].first==v){\r\n+            cout<<bfsTree[i].second;\r\n+            i = i+1;\r\n+            if(bfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"BFS all :\\n\";\r\n+\r\n+    for(int i=0;i<bfsAll.size();i++){\r\n+        int v = bfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsAll[i].first==v){\r\n+            cout<<bfsAll[i].second;\r\n+            i = i+1;\r\n+            if(bfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n+    \r\n+    cout<<\"DFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<dfsTree.size();i++){\r\n+        int v = dfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsTree[i].first==v){\r\n+            cout<<dfsTree[i].second;\r\n+            i = i+1;\r\n+            if(dfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"DFS all :\\n\";\r\n+\r\n+    for(int i=0;i<dfsAll.size();i++){\r\n+        int v = dfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsAll[i].first==v){\r\n+            cout<<dfsAll[i].second;\r\n+            i = i+1;\r\n+            if(dfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n+\r\n+    delete[]adj;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686152673401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+#include<bits/stdc++.h>\r\n+#include\"GraphUtils.h\"\r\n+#include\"BFSDFS.h\"\r\n+#include\"CheckCycle.h\"\r\n+using namespace std;\r\n+int main(){\r\n+\r\n+    freopen(\"input.txt\", \"r\", stdin);\r\n+    freopen(\"output.txt\", \"w\", stdout);\r\n+\r\n+\r\n+    int n,m,start;\r\n+    cin>>n>>m;\r\n+    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n+    for(int i=0;i<m;i++){\r\n+        int u,v;\r\n+        double w;\r\n+        cin>>u>>v>>w;\r\n+        addEdge(adj,u,v,w);\r\n+    }\r\n+    print(adj,n);\r\n+\r\n+    cin>>start;\r\n+\r\n+    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n+    \r\n+    cout<<\"BFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<bfsTree.size();i++){\r\n+        int v = bfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsTree[i].first==v){\r\n+            cout<<bfsTree[i].second;\r\n+            i = i+1;\r\n+            if(bfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"BFS all :\\n\";\r\n+\r\n+    for(int i=0;i<bfsAll.size();i++){\r\n+        int v = bfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsAll[i].first==v){\r\n+            cout<<bfsAll[i].second;\r\n+            i = i+1;\r\n+            if(bfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n+    \r\n+    cout<<\"DFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<dfsTree.size();i++){\r\n+        int v = dfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsTree[i].first==v){\r\n+            cout<<dfsTree[i].second;\r\n+            i = i+1;\r\n+            if(dfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"DFS all :\\n\";\r\n+\r\n+    for(int i=0;i<dfsAll.size();i++){\r\n+        int v = dfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsAll[i].first==v){\r\n+            cout<<dfsAll[i].second;\r\n+            i = i+1;\r\n+            if(dfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n+\r\n+    delete[]adj;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686152678635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+#include<bits/stdc++.h>\r\n+#include\"GraphUtil.h\"\r\n+#include\"BFSDFS.h\"\r\n+#include\"CheckCycle.h\"\r\n+using namespace std;\r\n+int main(){\r\n+\r\n+    freopen(\"input.txt\", \"r\", stdin);\r\n+    freopen(\"output.txt\", \"w\", stdout);\r\n+\r\n+\r\n+    int n,m,start;\r\n+    cin>>n>>m;\r\n+    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n+    for(int i=0;i<m;i++){\r\n+        int u,v;\r\n+        double w;\r\n+        cin>>u>>v>>w;\r\n+        addEdge(adj,u,v,w);\r\n+    }\r\n+    print(adj,n);\r\n+\r\n+    cin>>start;\r\n+\r\n+    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n+    \r\n+    cout<<\"BFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<bfsTree.size();i++){\r\n+        int v = bfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsTree[i].first==v){\r\n+            cout<<bfsTree[i].second;\r\n+            i = i+1;\r\n+            if(bfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"BFS all :\\n\";\r\n+\r\n+    for(int i=0;i<bfsAll.size();i++){\r\n+        int v = bfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsAll[i].first==v){\r\n+            cout<<bfsAll[i].second;\r\n+            i = i+1;\r\n+            if(bfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n+    \r\n+    cout<<\"DFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<dfsTree.size();i++){\r\n+        int v = dfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsTree[i].first==v){\r\n+            cout<<dfsTree[i].second;\r\n+            i = i+1;\r\n+            if(dfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"DFS all :\\n\";\r\n+\r\n+    for(int i=0;i<dfsAll.size();i++){\r\n+        int v = dfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsAll[i].first==v){\r\n+            cout<<dfsAll[i].second;\r\n+            i = i+1;\r\n+            if(dfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n+\r\n+    delete[]adj;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686152705948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n #include<bits/stdc++.h>\r\n-#include\"GraphUtil.h\"\r\n #include\"BFSDFS.h\"\r\n #include\"CheckCycle.h\"\r\n using namespace std;\r\n int main(){\r\n@@ -90,287 +89,5 @@\n \r\n     cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n \r\n     delete[]adj;\r\n-}\n-#include<bits/stdc++.h>\r\n-#include\"GraphUtils.h\"\r\n-#include\"BFSDFS.h\"\r\n-#include\"CheckCycle.h\"\r\n-using namespace std;\r\n-int main(){\r\n-\r\n-    freopen(\"input.txt\", \"r\", stdin);\r\n-    freopen(\"output.txt\", \"w\", stdout);\r\n-\r\n-\r\n-    int n,m,start;\r\n-    cin>>n>>m;\r\n-    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n-    for(int i=0;i<m;i++){\r\n-        int u,v;\r\n-        double w;\r\n-        cin>>u>>v>>w;\r\n-        addEdge(adj,u,v,w);\r\n-    }\r\n-    print(adj,n);\r\n-\r\n-    cin>>start;\r\n-\r\n-    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n-    \r\n-    cout<<\"BFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<bfsTree.size();i++){\r\n-        int v = bfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsTree[i].first==v){\r\n-            cout<<bfsTree[i].second;\r\n-            i = i+1;\r\n-            if(bfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"BFS all :\\n\";\r\n-\r\n-    for(int i=0;i<bfsAll.size();i++){\r\n-        int v = bfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsAll[i].first==v){\r\n-            cout<<bfsAll[i].second;\r\n-            i = i+1;\r\n-            if(bfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n-    \r\n-    cout<<\"DFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<dfsTree.size();i++){\r\n-        int v = dfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsTree[i].first==v){\r\n-            cout<<dfsTree[i].second;\r\n-            i = i+1;\r\n-            if(dfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"DFS all :\\n\";\r\n-\r\n-    for(int i=0;i<dfsAll.size();i++){\r\n-        int v = dfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsAll[i].first==v){\r\n-            cout<<dfsAll[i].second;\r\n-            i = i+1;\r\n-            if(dfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n-\r\n-    delete[]adj;\r\n-}\n-#include<bits/stdc++.h>\r\n-#include\r\n-#include\"BFSDFS.h\"\r\n-#include\"CheckCycle.h\"\r\n-using namespace std;\r\n-int main(){\r\n-\r\n-    freopen(\"input.txt\", \"r\", stdin);\r\n-    freopen(\"output.txt\", \"w\", stdout);\r\n-\r\n-\r\n-    int n,m,start;\r\n-    cin>>n>>m;\r\n-    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n-    for(int i=0;i<m;i++){\r\n-        int u,v;\r\n-        double w;\r\n-        cin>>u>>v>>w;\r\n-        addEdge(adj,u,v,w);\r\n-    }\r\n-    print(adj,n);\r\n-\r\n-    cin>>start;\r\n-\r\n-    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n-    \r\n-    cout<<\"BFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<bfsTree.size();i++){\r\n-        int v = bfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsTree[i].first==v){\r\n-            cout<<bfsTree[i].second;\r\n-            i = i+1;\r\n-            if(bfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"BFS all :\\n\";\r\n-\r\n-    for(int i=0;i<bfsAll.size();i++){\r\n-        int v = bfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsAll[i].first==v){\r\n-            cout<<bfsAll[i].second;\r\n-            i = i+1;\r\n-            if(bfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n-    \r\n-    cout<<\"DFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<dfsTree.size();i++){\r\n-        int v = dfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsTree[i].first==v){\r\n-            cout<<dfsTree[i].second;\r\n-            i = i+1;\r\n-            if(dfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"DFS all :\\n\";\r\n-\r\n-    for(int i=0;i<dfsAll.size();i++){\r\n-        int v = dfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsAll[i].first==v){\r\n-            cout<<dfsAll[i].second;\r\n-            i = i+1;\r\n-            if(dfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n-\r\n-    delete[]adj;\r\n-}\n-#include<bits/stdc++.h>\r\n-\r\n-#include\"BFSDFS.h\"\r\n-#include\"CheckCycle.h\"\r\n-using namespace std;\r\n-int main(){\r\n-\r\n-    freopen(\"input.txt\", \"r\", stdin);\r\n-    freopen(\"output.txt\", \"w\", stdout);\r\n-\r\n-\r\n-    int n,m,start;\r\n-    cin>>n>>m;\r\n-    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n-    for(int i=0;i<m;i++){\r\n-        int u,v;\r\n-        double w;\r\n-        cin>>u>>v>>w;\r\n-        addEdge(adj,u,v,w);\r\n-    }\r\n-    print(adj,n);\r\n-\r\n-    cin>>start;\r\n-\r\n-    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n-    \r\n-    cout<<\"BFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<bfsTree.size();i++){\r\n-        int v = bfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsTree[i].first==v){\r\n-            cout<<bfsTree[i].second;\r\n-            i = i+1;\r\n-            if(bfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"BFS all :\\n\";\r\n-\r\n-    for(int i=0;i<bfsAll.size();i++){\r\n-        int v = bfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsAll[i].first==v){\r\n-            cout<<bfsAll[i].second;\r\n-            i = i+1;\r\n-            if(bfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n-    \r\n-    cout<<\"DFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<dfsTree.size();i++){\r\n-        int v = dfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsTree[i].first==v){\r\n-            cout<<dfsTree[i].second;\r\n-            i = i+1;\r\n-            if(dfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"DFS all :\\n\";\r\n-\r\n-    for(int i=0;i<dfsAll.size();i++){\r\n-        int v = dfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsAll[i].first==v){\r\n-            cout<<dfsAll[i].second;\r\n-            i = i+1;\r\n-            if(dfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n-\r\n-    delete[]adj;\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686153487510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n     vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n     \r\n     cout<<\"BFS Tree : \\n\";\r\n \r\n-    for(int i=0;i<bfsTree.size();i++){\r\n+    for(int i=0;i<bfsTree;i++){\r\n         int v = bfsTree[i].first;\r\n         cout<<v<<\" -> \";\r\n         while(bfsTree[i].first==v){\r\n             cout<<bfsTree[i].second;\r\n"
                },
                {
                    "date": 1686153493341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,93 @@\n+#include<bits/stdc++.h>\r\n+#include\"BFSDFS.h\"\r\n+#include\"CheckCycle.h\"\r\n+using namespace std;\r\n+int main(){\r\n+\r\n+    freopen(\"input.txt\", \"r\", stdin);\r\n+    freopen(\"output.txt\", \"w\", stdout);\r\n+\r\n+\r\n+    int n,m,start;\r\n+    cin>>n>>m;\r\n+    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n+    for(int i=0;i<m;i++){\r\n+        int u,v;\r\n+        double w;\r\n+        cin>>u>>v>>w;\r\n+        addEdge(adj,u,v,w);\r\n+    }\r\n+    print(adj,n);\r\n+\r\n+    cin>>start;\r\n+\r\n+    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n+    \r\n+    cout<<\"BFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<len(bfsTree);i++){\r\n+        int v = bfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsTree[i].first==v){\r\n+            cout<<bfsTree[i].second;\r\n+            i = i+1;\r\n+            if(bfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"BFS all :\\n\";\r\n+\r\n+    for(int i=0;i<bfsAll.size();i++){\r\n+        int v = bfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsAll[i].first==v){\r\n+            cout<<bfsAll[i].second;\r\n+            i = i+1;\r\n+            if(bfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n+    \r\n+    cout<<\"DFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<dfsTree.size();i++){\r\n+        int v = dfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsTree[i].first==v){\r\n+            cout<<dfsTree[i].second;\r\n+            i = i+1;\r\n+            if(dfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"DFS all :\\n\";\r\n+\r\n+    for(int i=0;i<dfsAll.size();i++){\r\n+        int v = dfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsAll[i].first==v){\r\n+            cout<<dfsAll[i].second;\r\n+            i = i+1;\r\n+            if(dfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n+\r\n+    delete[]adj;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686153499086,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,93 @@\n+#include<bits/stdc++.h>\r\n+#include\"BFSDFS.h\"\r\n+#include\"CheckCycle.h\"\r\n+using namespace std;\r\n+int main(){\r\n+\r\n+    freopen(\"input.txt\", \"r\", stdin);\r\n+    freopen(\"output.txt\", \"w\", stdout);\r\n+\r\n+\r\n+    int n,m,start;\r\n+    cin>>n>>m;\r\n+    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n+    for(int i=0;i<m;i++){\r\n+        int u,v;\r\n+        double w;\r\n+        cin>>u>>v>>w;\r\n+        addEdge(adj,u,v,w);\r\n+    }\r\n+    print(adj,n);\r\n+\r\n+    cin>>start;\r\n+\r\n+    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n+    \r\n+    cout<<\"BFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<len(bfsTree;i++){\r\n+        int v = bfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsTree[i].first==v){\r\n+            cout<<bfsTree[i].second;\r\n+            i = i+1;\r\n+            if(bfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"BFS all :\\n\";\r\n+\r\n+    for(int i=0;i<bfsAll.size();i++){\r\n+        int v = bfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsAll[i].first==v){\r\n+            cout<<bfsAll[i].second;\r\n+            i = i+1;\r\n+            if(bfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n+    \r\n+    cout<<\"DFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<dfsTree.size();i++){\r\n+        int v = dfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsTree[i].first==v){\r\n+            cout<<dfsTree[i].second;\r\n+            i = i+1;\r\n+            if(dfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"DFS all :\\n\";\r\n+\r\n+    for(int i=0;i<dfsAll.size();i++){\r\n+        int v = dfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsAll[i].first==v){\r\n+            cout<<dfsAll[i].second;\r\n+            i = i+1;\r\n+            if(dfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n+\r\n+    delete[]adj;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686153597051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+#include<bits/stdc++.h>\r\n+#include\"BFSDFS.h\"\r\n+#include\"CheckCycle.h\"\r\n+using namespace std;\r\n+int main(){\r\n+\r\n+    freopen(\"input.txt\", \"r\", stdin);\r\n+    freopen(\"output.txt\", \"w\", stdout);\r\n+\r\n+\r\n+    int n,m,start;\r\n+    cin>>n>>m;\r\n+    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n+    for(int i=0;i<m;i++){\r\n+        int u,v;\r\n+        double w;\r\n+        cin>>u>>v>>w;\r\n+        addEdge(adj,u,v,w);\r\n+    }\r\n+    print(adj,n);\r\n+\r\n+    cin>>start;\r\n+\r\n+    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n+    \r\n+    cout<<\"BFS Tree : \\n\";\r\n+    \r\n+\r\n+    for(int i=0;i<bfsTree.;i++){\r\n+        int v = bfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsTree[i].first==v){\r\n+            cout<<bfsTree[i].second;\r\n+            i = i+1;\r\n+            if(bfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"BFS all :\\n\";\r\n+\r\n+    for(int i=0;i<bfsAll.size();i++){\r\n+        int v = bfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsAll[i].first==v){\r\n+            cout<<bfsAll[i].second;\r\n+            i = i+1;\r\n+            if(bfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n+    \r\n+    cout<<\"DFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<dfsTree.size();i++){\r\n+        int v = dfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsTree[i].first==v){\r\n+            cout<<dfsTree[i].second;\r\n+            i = i+1;\r\n+            if(dfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"DFS all :\\n\";\r\n+\r\n+    for(int i=0;i<dfsAll.size();i++){\r\n+        int v = dfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsAll[i].first==v){\r\n+            cout<<dfsAll[i].second;\r\n+            i = i+1;\r\n+            if(dfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n+\r\n+    delete[]adj;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686153602628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,95 @@\n+#include<bits/stdc++.h>\r\n+#include\"BFSDFS.h\"\r\n+#include\"CheckCycle.h\"\r\n+using namespace std;\r\n+int main(){\r\n+\r\n+    freopen(\"input.txt\", \"r\", stdin);\r\n+    freopen(\"output.txt\", \"w\", stdout);\r\n+\r\n+\r\n+    int n,m,start;\r\n+    cin>>n>>m;\r\n+    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n+    for(int i=0;i<m;i++){\r\n+        int u,v;\r\n+        double w;\r\n+        cin>>u>>v>>w;\r\n+        addEdge(adj,u,v,w);\r\n+    }\r\n+    print(adj,n);\r\n+\r\n+    cin>>start;\r\n+\r\n+    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n+    \r\n+    cout<<\"BFS Tree : \\n\";\r\n+\r\n+    cout<<\"\"\r\n+\r\n+    for(int i=0;i<bfsTree.;i++){\r\n+        int v = bfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsTree[i].first==v){\r\n+            cout<<bfsTree[i].second;\r\n+            i = i+1;\r\n+            if(bfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"BFS all :\\n\";\r\n+\r\n+    for(int i=0;i<bfsAll.size();i++){\r\n+        int v = bfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsAll[i].first==v){\r\n+            cout<<bfsAll[i].second;\r\n+            i = i+1;\r\n+            if(bfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n+    \r\n+    cout<<\"DFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<dfsTree.size();i++){\r\n+        int v = dfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsTree[i].first==v){\r\n+            cout<<dfsTree[i].second;\r\n+            i = i+1;\r\n+            if(dfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"DFS all :\\n\";\r\n+\r\n+    for(int i=0;i<dfsAll.size();i++){\r\n+        int v = dfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsAll[i].first==v){\r\n+            cout<<dfsAll[i].second;\r\n+            i = i+1;\r\n+            if(dfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n+\r\n+    delete[]adj;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686153612224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,95 @@\n+#include<bits/stdc++.h>\r\n+#include\"BFSDFS.h\"\r\n+#include\"CheckCycle.h\"\r\n+using namespace std;\r\n+int main(){\r\n+\r\n+    freopen(\"input.txt\", \"r\", stdin);\r\n+    freopen(\"output.txt\", \"w\", stdout);\r\n+\r\n+\r\n+    int n,m,start;\r\n+    cin>>n>>m;\r\n+    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n+    for(int i=0;i<m;i++){\r\n+        int u,v;\r\n+        double w;\r\n+        cin>>u>>v>>w;\r\n+        addEdge(adj,u,v,w);\r\n+    }\r\n+    print(adj,n);\r\n+\r\n+    cin>>start;\r\n+\r\n+    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n+    \r\n+    cout<<\"BFS Tree : \\n\";\r\n+\r\n+    cout<<\"Size : \"<<bfsTree.size()<<endl;\r\n+\r\n+    for(int i=0;i<bfsTree.size();i++){\r\n+        int v = bfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsTree[i].first==v){\r\n+            cout<<bfsTree[i].second;\r\n+            i = i+1;\r\n+            if(bfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"BFS all :\\n\";\r\n+\r\n+    for(int i=0;i<bfsAll.size();i++){\r\n+        int v = bfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsAll[i].first==v){\r\n+            cout<<bfsAll[i].second;\r\n+            i = i+1;\r\n+            if(bfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n+    \r\n+    cout<<\"DFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<dfsTree.size();i++){\r\n+        int v = dfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsTree[i].first==v){\r\n+            cout<<dfsTree[i].second;\r\n+            i = i+1;\r\n+            if(dfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"DFS all :\\n\";\r\n+\r\n+    for(int i=0;i<dfsAll.size();i++){\r\n+        int v = dfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsAll[i].first==v){\r\n+            cout<<dfsAll[i].second;\r\n+            i = i+1;\r\n+            if(dfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n+\r\n+    delete[]adj;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686153769988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n \r\n     for(int i=0;i<bfsTree.size();i++){\r\n         int v = bfsTree[i].first;\r\n         cout<<v<<\" -> \";\r\n-        while(bfsTree[i].first==v){\r\n+        while(bfsTree[i].first==v ){\r\n             cout<<bfsTree[i].second;\r\n             i = i+1;\r\n             if(bfsTree[i].first == v)cout<<\",\";\r\n         }\r\n@@ -91,473 +91,5 @@\n \r\n     cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n \r\n     delete[]adj;\r\n-}\n-#include<bits/stdc++.h>\r\n-#include\"BFSDFS.h\"\r\n-#include\"CheckCycle.h\"\r\n-using namespace std;\r\n-int main(){\r\n-\r\n-    freopen(\"input.txt\", \"r\", stdin);\r\n-    freopen(\"output.txt\", \"w\", stdout);\r\n-\r\n-\r\n-    int n,m,start;\r\n-    cin>>n>>m;\r\n-    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n-    for(int i=0;i<m;i++){\r\n-        int u,v;\r\n-        double w;\r\n-        cin>>u>>v>>w;\r\n-        addEdge(adj,u,v,w);\r\n-    }\r\n-    print(adj,n);\r\n-\r\n-    cin>>start;\r\n-\r\n-    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n-    \r\n-    cout<<\"BFS Tree : \\n\";\r\n-\r\n-    cout<<\"\"\r\n-\r\n-    for(int i=0;i<bfsTree.;i++){\r\n-        int v = bfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsTree[i].first==v){\r\n-            cout<<bfsTree[i].second;\r\n-            i = i+1;\r\n-            if(bfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"BFS all :\\n\";\r\n-\r\n-    for(int i=0;i<bfsAll.size();i++){\r\n-        int v = bfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsAll[i].first==v){\r\n-            cout<<bfsAll[i].second;\r\n-            i = i+1;\r\n-            if(bfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n-    \r\n-    cout<<\"DFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<dfsTree.size();i++){\r\n-        int v = dfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsTree[i].first==v){\r\n-            cout<<dfsTree[i].second;\r\n-            i = i+1;\r\n-            if(dfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"DFS all :\\n\";\r\n-\r\n-    for(int i=0;i<dfsAll.size();i++){\r\n-        int v = dfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsAll[i].first==v){\r\n-            cout<<dfsAll[i].second;\r\n-            i = i+1;\r\n-            if(dfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n-\r\n-    delete[]adj;\r\n-}\n-#include<bits/stdc++.h>\r\n-#include\"BFSDFS.h\"\r\n-#include\"CheckCycle.h\"\r\n-using namespace std;\r\n-int main(){\r\n-\r\n-    freopen(\"input.txt\", \"r\", stdin);\r\n-    freopen(\"output.txt\", \"w\", stdout);\r\n-\r\n-\r\n-    int n,m,start;\r\n-    cin>>n>>m;\r\n-    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n-    for(int i=0;i<m;i++){\r\n-        int u,v;\r\n-        double w;\r\n-        cin>>u>>v>>w;\r\n-        addEdge(adj,u,v,w);\r\n-    }\r\n-    print(adj,n);\r\n-\r\n-    cin>>start;\r\n-\r\n-    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n-    \r\n-    cout<<\"BFS Tree : \\n\";\r\n-    \r\n-\r\n-    for(int i=0;i<bfsTree.;i++){\r\n-        int v = bfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsTree[i].first==v){\r\n-            cout<<bfsTree[i].second;\r\n-            i = i+1;\r\n-            if(bfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"BFS all :\\n\";\r\n-\r\n-    for(int i=0;i<bfsAll.size();i++){\r\n-        int v = bfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsAll[i].first==v){\r\n-            cout<<bfsAll[i].second;\r\n-            i = i+1;\r\n-            if(bfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n-    \r\n-    cout<<\"DFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<dfsTree.size();i++){\r\n-        int v = dfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsTree[i].first==v){\r\n-            cout<<dfsTree[i].second;\r\n-            i = i+1;\r\n-            if(dfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"DFS all :\\n\";\r\n-\r\n-    for(int i=0;i<dfsAll.size();i++){\r\n-        int v = dfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsAll[i].first==v){\r\n-            cout<<dfsAll[i].second;\r\n-            i = i+1;\r\n-            if(dfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n-\r\n-    delete[]adj;\r\n-}\n-#include<bits/stdc++.h>\r\n-#include\"BFSDFS.h\"\r\n-#include\"CheckCycle.h\"\r\n-using namespace std;\r\n-int main(){\r\n-\r\n-    freopen(\"input.txt\", \"r\", stdin);\r\n-    freopen(\"output.txt\", \"w\", stdout);\r\n-\r\n-\r\n-    int n,m,start;\r\n-    cin>>n>>m;\r\n-    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n-    for(int i=0;i<m;i++){\r\n-        int u,v;\r\n-        double w;\r\n-        cin>>u>>v>>w;\r\n-        addEdge(adj,u,v,w);\r\n-    }\r\n-    print(adj,n);\r\n-\r\n-    cin>>start;\r\n-\r\n-    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n-    \r\n-    cout<<\"BFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<len(bfsTree;i++){\r\n-        int v = bfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsTree[i].first==v){\r\n-            cout<<bfsTree[i].second;\r\n-            i = i+1;\r\n-            if(bfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"BFS all :\\n\";\r\n-\r\n-    for(int i=0;i<bfsAll.size();i++){\r\n-        int v = bfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsAll[i].first==v){\r\n-            cout<<bfsAll[i].second;\r\n-            i = i+1;\r\n-            if(bfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n-    \r\n-    cout<<\"DFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<dfsTree.size();i++){\r\n-        int v = dfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsTree[i].first==v){\r\n-            cout<<dfsTree[i].second;\r\n-            i = i+1;\r\n-            if(dfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"DFS all :\\n\";\r\n-\r\n-    for(int i=0;i<dfsAll.size();i++){\r\n-        int v = dfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsAll[i].first==v){\r\n-            cout<<dfsAll[i].second;\r\n-            i = i+1;\r\n-            if(dfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n-\r\n-    delete[]adj;\r\n-}\n-#include<bits/stdc++.h>\r\n-#include\"BFSDFS.h\"\r\n-#include\"CheckCycle.h\"\r\n-using namespace std;\r\n-int main(){\r\n-\r\n-    freopen(\"input.txt\", \"r\", stdin);\r\n-    freopen(\"output.txt\", \"w\", stdout);\r\n-\r\n-\r\n-    int n,m,start;\r\n-    cin>>n>>m;\r\n-    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n-    for(int i=0;i<m;i++){\r\n-        int u,v;\r\n-        double w;\r\n-        cin>>u>>v>>w;\r\n-        addEdge(adj,u,v,w);\r\n-    }\r\n-    print(adj,n);\r\n-\r\n-    cin>>start;\r\n-\r\n-    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n-    \r\n-    cout<<\"BFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<len(bfsTree);i++){\r\n-        int v = bfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsTree[i].first==v){\r\n-            cout<<bfsTree[i].second;\r\n-            i = i+1;\r\n-            if(bfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"BFS all :\\n\";\r\n-\r\n-    for(int i=0;i<bfsAll.size();i++){\r\n-        int v = bfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsAll[i].first==v){\r\n-            cout<<bfsAll[i].second;\r\n-            i = i+1;\r\n-            if(bfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n-    \r\n-    cout<<\"DFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<dfsTree.size();i++){\r\n-        int v = dfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsTree[i].first==v){\r\n-            cout<<dfsTree[i].second;\r\n-            i = i+1;\r\n-            if(dfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"DFS all :\\n\";\r\n-\r\n-    for(int i=0;i<dfsAll.size();i++){\r\n-        int v = dfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsAll[i].first==v){\r\n-            cout<<dfsAll[i].second;\r\n-            i = i+1;\r\n-            if(dfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n-\r\n-    delete[]adj;\r\n-}\n-#include<bits/stdc++.h>\r\n-#include\"BFSDFS.h\"\r\n-#include\"CheckCycle.h\"\r\n-using namespace std;\r\n-int main(){\r\n-\r\n-    freopen(\"input.txt\", \"r\", stdin);\r\n-    freopen(\"output.txt\", \"w\", stdout);\r\n-\r\n-\r\n-    int n,m,start;\r\n-    cin>>n>>m;\r\n-    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n-    for(int i=0;i<m;i++){\r\n-        int u,v;\r\n-        double w;\r\n-        cin>>u>>v>>w;\r\n-        addEdge(adj,u,v,w);\r\n-    }\r\n-    print(adj,n);\r\n-\r\n-    cin>>start;\r\n-\r\n-    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n-    \r\n-    cout<<\"BFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<bfsTree;i++){\r\n-        int v = bfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsTree[i].first==v){\r\n-            cout<<bfsTree[i].second;\r\n-            i = i+1;\r\n-            if(bfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"BFS all :\\n\";\r\n-\r\n-    for(int i=0;i<bfsAll.size();i++){\r\n-        int v = bfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsAll[i].first==v){\r\n-            cout<<bfsAll[i].second;\r\n-            i = i+1;\r\n-            if(bfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n-    \r\n-    cout<<\"DFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<dfsTree.size();i++){\r\n-        int v = dfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsTree[i].first==v){\r\n-            cout<<dfsTree[i].second;\r\n-            i = i+1;\r\n-            if(dfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"DFS all :\\n\";\r\n-\r\n-    for(int i=0;i<dfsAll.size();i++){\r\n-        int v = dfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsAll[i].first==v){\r\n-            cout<<dfsAll[i].second;\r\n-            i = i+1;\r\n-            if(dfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n-\r\n-    delete[]adj;\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686153776840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,95 @@\n+#include<bits/stdc++.h>\r\n+#include\"BFSDFS.h\"\r\n+#include\"CheckCycle.h\"\r\n+using namespace std;\r\n+int main(){\r\n+\r\n+    freopen(\"input.txt\", \"r\", stdin);\r\n+    freopen(\"output.txt\", \"w\", stdout);\r\n+\r\n+\r\n+    int n,m,start;\r\n+    cin>>n>>m;\r\n+    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n+    for(int i=0;i<m;i++){\r\n+        int u,v;\r\n+        double w;\r\n+        cin>>u>>v>>w;\r\n+        addEdge(adj,u,v,w);\r\n+    }\r\n+    print(adj,n);\r\n+\r\n+    cin>>start;\r\n+\r\n+    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n+    \r\n+    cout<<\"BFS Tree : \\n\";\r\n+\r\n+    cout<<\"Size : \"<<bfsTree.size()<<endl;\r\n+\r\n+    for(int i=0;i<bfsTree.size();i++){\r\n+        int v = bfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsTree[i].first==v && i<){\r\n+            cout<<bfsTree[i].second;\r\n+            i = i+1;\r\n+            if(bfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"BFS all :\\n\";\r\n+\r\n+    for(int i=0;i<bfsAll.size();i++){\r\n+        int v = bfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsAll[i].first==v){\r\n+            cout<<bfsAll[i].second;\r\n+            i = i+1;\r\n+            if(bfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n+    \r\n+    cout<<\"DFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<dfsTree.size();i++){\r\n+        int v = dfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsTree[i].first==v){\r\n+            cout<<dfsTree[i].second;\r\n+            i = i+1;\r\n+            if(dfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"DFS all :\\n\";\r\n+\r\n+    for(int i=0;i<dfsAll.size();i++){\r\n+        int v = dfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsAll[i].first==v){\r\n+            cout<<dfsAll[i].second;\r\n+            i = i+1;\r\n+            if(dfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n+\r\n+    delete[]adj;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686153823074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,12 +29,12 @@\n \r\n     for(int i=0;i<bfsTree.size();i++){\r\n         int v = bfsTree[i].first;\r\n         cout<<v<<\" -> \";\r\n-        while(bfsTree[i].first==v && i<){\r\n+        while(bfsTree[i].first==v && i<bfsTree.size()){\r\n             cout<<bfsTree[i].second;\r\n             i = i+1;\r\n-            if(bfsTree[i].first == v)cout<<\",\";\r\n+            if(bfsTree[i].first == v )cout<<\",\";\r\n         }\r\n         i--;\r\n         cout<<endl;\r\n     }\r\n@@ -91,100 +91,5 @@\n \r\n     cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n \r\n     delete[]adj;\r\n-}\n-#include<bits/stdc++.h>\r\n-#include\"BFSDFS.h\"\r\n-#include\"CheckCycle.h\"\r\n-using namespace std;\r\n-int main(){\r\n-\r\n-    freopen(\"input.txt\", \"r\", stdin);\r\n-    freopen(\"output.txt\", \"w\", stdout);\r\n-\r\n-\r\n-    int n,m,start;\r\n-    cin>>n>>m;\r\n-    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n-    for(int i=0;i<m;i++){\r\n-        int u,v;\r\n-        double w;\r\n-        cin>>u>>v>>w;\r\n-        addEdge(adj,u,v,w);\r\n-    }\r\n-    print(adj,n);\r\n-\r\n-    cin>>start;\r\n-\r\n-    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n-    \r\n-    cout<<\"BFS Tree : \\n\";\r\n-\r\n-    cout<<\"Size : \"<<bfsTree.size()<<endl;\r\n-\r\n-    for(int i=0;i<bfsTree.size();i++){\r\n-        int v = bfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsTree[i].first==v ){\r\n-            cout<<bfsTree[i].second;\r\n-            i = i+1;\r\n-            if(bfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"BFS all :\\n\";\r\n-\r\n-    for(int i=0;i<bfsAll.size();i++){\r\n-        int v = bfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsAll[i].first==v){\r\n-            cout<<bfsAll[i].second;\r\n-            i = i+1;\r\n-            if(bfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n-    \r\n-    cout<<\"DFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<dfsTree.size();i++){\r\n-        int v = dfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsTree[i].first==v){\r\n-            cout<<dfsTree[i].second;\r\n-            i = i+1;\r\n-            if(dfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"DFS all :\\n\";\r\n-\r\n-    for(int i=0;i<dfsAll.size();i++){\r\n-        int v = dfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsAll[i].first==v){\r\n-            cout<<dfsAll[i].second;\r\n-            i = i+1;\r\n-            if(dfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n-\r\n-    delete[]adj;\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686153829616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,95 @@\n+#include<bits/stdc++.h>\r\n+#include\"BFSDFS.h\"\r\n+#include\"CheckCycle.h\"\r\n+using namespace std;\r\n+int main(){\r\n+\r\n+    freopen(\"input.txt\", \"r\", stdin);\r\n+    freopen(\"output.txt\", \"w\", stdout);\r\n+\r\n+\r\n+    int n,m,start;\r\n+    cin>>n>>m;\r\n+    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n+    for(int i=0;i<m;i++){\r\n+        int u,v;\r\n+        double w;\r\n+        cin>>u>>v>>w;\r\n+        addEdge(adj,u,v,w);\r\n+    }\r\n+    print(adj,n);\r\n+\r\n+    cin>>start;\r\n+\r\n+    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n+    \r\n+    cout<<\"BFS Tree : \\n\";\r\n+\r\n+    cout<<\"Size : \"<<bfsTree.size()<<endl;\r\n+\r\n+    for(int i=0;i<bfsTree.size();i++){\r\n+        int v = bfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsTree[i].first==v && i<bfsTree.size()){\r\n+            cout<<bfsTree[i].second;\r\n+            i = i+1;\r\n+            if(bfsTree[i].first == v && bfsTree)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"BFS all :\\n\";\r\n+\r\n+    for(int i=0;i<bfsAll.size();i++){\r\n+        int v = bfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsAll[i].first==v){\r\n+            cout<<bfsAll[i].second;\r\n+            i = i+1;\r\n+            if(bfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n+    \r\n+    cout<<\"DFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<dfsTree.size();i++){\r\n+        int v = dfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsTree[i].first==v){\r\n+            cout<<dfsTree[i].second;\r\n+            i = i+1;\r\n+            if(dfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"DFS all :\\n\";\r\n+\r\n+    for(int i=0;i<dfsAll.size();i++){\r\n+        int v = dfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsAll[i].first==v){\r\n+            cout<<dfsAll[i].second;\r\n+            i = i+1;\r\n+            if(dfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n+\r\n+    delete[]adj;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686153836678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,95 @@\n+#include<bits/stdc++.h>\r\n+#include\"BFSDFS.h\"\r\n+#include\"CheckCycle.h\"\r\n+using namespace std;\r\n+int main(){\r\n+\r\n+    freopen(\"input.txt\", \"r\", stdin);\r\n+    freopen(\"output.txt\", \"w\", stdout);\r\n+\r\n+\r\n+    int n,m,start;\r\n+    cin>>n>>m;\r\n+    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n+    for(int i=0;i<m;i++){\r\n+        int u,v;\r\n+        double w;\r\n+        cin>>u>>v>>w;\r\n+        addEdge(adj,u,v,w);\r\n+    }\r\n+    print(adj,n);\r\n+\r\n+    cin>>start;\r\n+\r\n+    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n+    \r\n+    cout<<\"BFS Tree : \\n\";\r\n+\r\n+    cout<<\"Size : \"<<bfsTree.size()<<endl;\r\n+\r\n+    for(int i=0;i<bfsTree.size();i++){\r\n+        int v = bfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsTree[i].first==v && i<bfsTree.size()){\r\n+            cout<<bfsTree[i].second;\r\n+            i = i+1;\r\n+            if(bfsTree[i].first == v && ibfsTree.)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"BFS all :\\n\";\r\n+\r\n+    for(int i=0;i<bfsAll.size();i++){\r\n+        int v = bfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsAll[i].first==v){\r\n+            cout<<bfsAll[i].second;\r\n+            i = i+1;\r\n+            if(bfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n+    \r\n+    cout<<\"DFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<dfsTree.size();i++){\r\n+        int v = dfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsTree[i].first==v){\r\n+            cout<<dfsTree[i].second;\r\n+            i = i+1;\r\n+            if(dfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"DFS all :\\n\";\r\n+\r\n+    for(int i=0;i<dfsAll.size();i++){\r\n+        int v = dfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsAll[i].first==v){\r\n+            cout<<dfsAll[i].second;\r\n+            i = i+1;\r\n+            if(dfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n+\r\n+    delete[]adj;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686153845527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n         cout<<v<<\" -> \";\r\n         while(bfsTree[i].first==v && i<bfsTree.size()){\r\n             cout<<bfsTree[i].second;\r\n             i = i+1;\r\n-            if(bfsTree[i].first == v && ibfsTree.)cout<<\",\";\r\n+            if(bfsTree[i].first == v && i<bfsTree.size())cout<<\",\";\r\n         }\r\n         i--;\r\n         cout<<endl;\r\n     }\r\n@@ -91,195 +91,5 @@\n \r\n     cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n \r\n     delete[]adj;\r\n-}\n-#include<bits/stdc++.h>\r\n-#include\"BFSDFS.h\"\r\n-#include\"CheckCycle.h\"\r\n-using namespace std;\r\n-int main(){\r\n-\r\n-    freopen(\"input.txt\", \"r\", stdin);\r\n-    freopen(\"output.txt\", \"w\", stdout);\r\n-\r\n-\r\n-    int n,m,start;\r\n-    cin>>n>>m;\r\n-    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n-    for(int i=0;i<m;i++){\r\n-        int u,v;\r\n-        double w;\r\n-        cin>>u>>v>>w;\r\n-        addEdge(adj,u,v,w);\r\n-    }\r\n-    print(adj,n);\r\n-\r\n-    cin>>start;\r\n-\r\n-    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n-    \r\n-    cout<<\"BFS Tree : \\n\";\r\n-\r\n-    cout<<\"Size : \"<<bfsTree.size()<<endl;\r\n-\r\n-    for(int i=0;i<bfsTree.size();i++){\r\n-        int v = bfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsTree[i].first==v && i<bfsTree.size()){\r\n-            cout<<bfsTree[i].second;\r\n-            i = i+1;\r\n-            if(bfsTree[i].first == v && bfsTree)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"BFS all :\\n\";\r\n-\r\n-    for(int i=0;i<bfsAll.size();i++){\r\n-        int v = bfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsAll[i].first==v){\r\n-            cout<<bfsAll[i].second;\r\n-            i = i+1;\r\n-            if(bfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n-    \r\n-    cout<<\"DFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<dfsTree.size();i++){\r\n-        int v = dfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsTree[i].first==v){\r\n-            cout<<dfsTree[i].second;\r\n-            i = i+1;\r\n-            if(dfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"DFS all :\\n\";\r\n-\r\n-    for(int i=0;i<dfsAll.size();i++){\r\n-        int v = dfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsAll[i].first==v){\r\n-            cout<<dfsAll[i].second;\r\n-            i = i+1;\r\n-            if(dfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n-\r\n-    delete[]adj;\r\n-}\n-#include<bits/stdc++.h>\r\n-#include\"BFSDFS.h\"\r\n-#include\"CheckCycle.h\"\r\n-using namespace std;\r\n-int main(){\r\n-\r\n-    freopen(\"input.txt\", \"r\", stdin);\r\n-    freopen(\"output.txt\", \"w\", stdout);\r\n-\r\n-\r\n-    int n,m,start;\r\n-    cin>>n>>m;\r\n-    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n-    for(int i=0;i<m;i++){\r\n-        int u,v;\r\n-        double w;\r\n-        cin>>u>>v>>w;\r\n-        addEdge(adj,u,v,w);\r\n-    }\r\n-    print(adj,n);\r\n-\r\n-    cin>>start;\r\n-\r\n-    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n-    \r\n-    cout<<\"BFS Tree : \\n\";\r\n-\r\n-    cout<<\"Size : \"<<bfsTree.size()<<endl;\r\n-\r\n-    for(int i=0;i<bfsTree.size();i++){\r\n-        int v = bfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsTree[i].first==v && i<bfsTree.size()){\r\n-            cout<<bfsTree[i].second;\r\n-            i = i+1;\r\n-            if(bfsTree[i].first == v )cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"BFS all :\\n\";\r\n-\r\n-    for(int i=0;i<bfsAll.size();i++){\r\n-        int v = bfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsAll[i].first==v){\r\n-            cout<<bfsAll[i].second;\r\n-            i = i+1;\r\n-            if(bfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n-    \r\n-    cout<<\"DFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<dfsTree.size();i++){\r\n-        int v = dfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsTree[i].first==v){\r\n-            cout<<dfsTree[i].second;\r\n-            i = i+1;\r\n-            if(dfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"DFS all :\\n\";\r\n-\r\n-    for(int i=0;i<dfsAll.size();i++){\r\n-        int v = dfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsAll[i].first==v){\r\n-            cout<<dfsAll[i].second;\r\n-            i = i+1;\r\n-            if(dfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n-\r\n-    delete[]adj;\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686153855574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,8 @@\n     vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n     \r\n     cout<<\"BFS Tree : \\n\";\r\n \r\n-    cout<<\"Size : \"<<bfsTree.size()<<endl;\r\n \r\n     for(int i=0;i<bfsTree.size();i++){\r\n         int v = bfsTree[i].first;\r\n         cout<<v<<\" -> \";\r\n"
                },
                {
                    "date": 1686153875603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,12 +45,12 @@\n \r\n     for(int i=0;i<bfsAll.size();i++){\r\n         int v = bfsAll[i].first;\r\n         cout<<v<<\" -> \";\r\n-        while(bfsAll[i].first==v){\r\n-            cout<<bfsAll[i].second;\r\n+        while(bfsTree[i].first==v && i<bfsTree.size()){\r\n+            cout<<bfsTree[i].second;\r\n             i = i+1;\r\n-            if(bfsAll[i].first == v)cout<<\",\";\r\n+            if(bfsTree[i].first == v && i<bfsTree.size())cout<<\",\";\r\n         }\r\n         i--;\r\n         cout<<endl;\r\n     }\r\n"
                },
                {
                    "date": 1686153882486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n \r\n     for(int i=0;i<bfsAll.size();i++){\r\n         int v = bfsAll[i].first;\r\n         cout<<v<<\" -> \";\r\n-        while(bfsTree[i].first==v && i<bfsTree.size()){\r\n+        while(bfsAll[i].first==v && i<bfsTree.size()){\r\n             cout<<bfsTree[i].second;\r\n             i = i+1;\r\n             if(bfsTree[i].first == v && i<bfsTree.size())cout<<\",\";\r\n         }\r\n"
                },
                {
                    "date": 1686153889878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+#include<bits/stdc++.h>\r\n+#include\"BFSDFS.h\"\r\n+#include\"CheckCycle.h\"\r\n+using namespace std;\r\n+int main(){\r\n+\r\n+    freopen(\"input.txt\", \"r\", stdin);\r\n+    freopen(\"output.txt\", \"w\", stdout);\r\n+\r\n+\r\n+    int n,m,start;\r\n+    cin>>n>>m;\r\n+    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n+    for(int i=0;i<m;i++){\r\n+        int u,v;\r\n+        double w;\r\n+        cin>>u>>v>>w;\r\n+        addEdge(adj,u,v,w);\r\n+    }\r\n+    print(adj,n);\r\n+\r\n+    cin>>start;\r\n+\r\n+    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n+    \r\n+    cout<<\"BFS Tree : \\n\";\r\n+\r\n+\r\n+    for(int i=0;i<bfsTree.size();i++){\r\n+        int v = bfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsTree[i].first==v && i<bfsTree.size()){\r\n+            cout<<bfsTree[i].second;\r\n+            i = i+1;\r\n+            if(bfsTree[i].first == v && i<bfsTree.size())cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"BFS all :\\n\";\r\n+\r\n+    for(int i=0;i<bfsAll.size();i++){\r\n+        int v = bfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsAll[i].first==v && i<bfsAll.size()){\r\n+            cout<<bfsAll[i].second;\r\n+            i = i+1;\r\n+            if(bfsTree[i].first == v && i<bfsTree.size())cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n+    \r\n+    cout<<\"DFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<dfsTree.size();i++){\r\n+        int v = dfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsTree[i].first==v){\r\n+            cout<<dfsTree[i].second;\r\n+            i = i+1;\r\n+            if(dfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"DFS all :\\n\";\r\n+\r\n+    for(int i=0;i<dfsAll.size();i++){\r\n+        int v = dfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsAll[i].first==v){\r\n+            cout<<dfsAll[i].second;\r\n+            i = i+1;\r\n+            if(dfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n+\r\n+    delete[]adj;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686153898009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+#include<bits/stdc++.h>\r\n+#include\"BFSDFS.h\"\r\n+#include\"CheckCycle.h\"\r\n+using namespace std;\r\n+int main(){\r\n+\r\n+    freopen(\"input.txt\", \"r\", stdin);\r\n+    freopen(\"output.txt\", \"w\", stdout);\r\n+\r\n+\r\n+    int n,m,start;\r\n+    cin>>n>>m;\r\n+    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n+    for(int i=0;i<m;i++){\r\n+        int u,v;\r\n+        double w;\r\n+        cin>>u>>v>>w;\r\n+        addEdge(adj,u,v,w);\r\n+    }\r\n+    print(adj,n);\r\n+\r\n+    cin>>start;\r\n+\r\n+    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n+    \r\n+    cout<<\"BFS Tree : \\n\";\r\n+\r\n+\r\n+    for(int i=0;i<bfsTree.size();i++){\r\n+        int v = bfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsTree[i].first==v && i<bfsTree.size()){\r\n+            cout<<bfsTree[i].second;\r\n+            i = i+1;\r\n+            if(bfsTree[i].first == v && i<bfsTree.size())cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"BFS all :\\n\";\r\n+\r\n+    for(int i=0;i<bfsAll.size();i++){\r\n+        int v = bfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsAll[i].first==v && i<bfsAll.size()){\r\n+            cout<<bfsAll[i].second;\r\n+            i = i+1;\r\n+            if(bfsAll[i].first == v && i<bfsAll.size())cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n+    \r\n+    cout<<\"DFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<dfsTree.size();i++){\r\n+        int v = dfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsTree[i].first==v){\r\n+            cout<<dfsTree[i].second;\r\n+            i = i+1;\r\n+            if(dfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"DFS all :\\n\";\r\n+\r\n+    for(int i=0;i<dfsAll.size();i++){\r\n+        int v = dfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsAll[i].first==v){\r\n+            cout<<dfsAll[i].second;\r\n+            i = i+1;\r\n+            if(dfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n+\r\n+    delete[]adj;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686153914955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+#include<bits/stdc++.h>\r\n+#include\"BFSDFS.h\"\r\n+#include\"CheckCycle.h\"\r\n+using namespace std;\r\n+int main(){\r\n+\r\n+    freopen(\"input.txt\", \"r\", stdin);\r\n+    freopen(\"output.txt\", \"w\", stdout);\r\n+\r\n+\r\n+    int n,m,start;\r\n+    cin>>n>>m;\r\n+    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n+    for(int i=0;i<m;i++){\r\n+        int u,v;\r\n+        double w;\r\n+        cin>>u>>v>>w;\r\n+        addEdge(adj,u,v,w);\r\n+    }\r\n+    print(adj,n);\r\n+\r\n+    cin>>start;\r\n+\r\n+    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n+    \r\n+    cout<<\"BFS Tree : \\n\";\r\n+\r\n+\r\n+    for(int i=0;i<bfsTree.size();i++){\r\n+        int v = bfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsTree[i].first==v && i<bfsTree.size()){\r\n+            cout<<bfsTree[i].second;\r\n+            i = i+1;\r\n+            if(bfsTree[i].first == v && i<bfsTree.size())cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"BFS all :\\n\";\r\n+\r\n+    for(int i=0;i<bfsAll.size();i++){\r\n+        int v = bfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsAll[i].first==v && i<bfsAll.size()){\r\n+            cout<<bfsAll[i].second;\r\n+            i = i+1;\r\n+            if(bfsAll[i].first == v && i<bfsAll.size())cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n+    \r\n+    cout<<\"DFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<dfsTree.size();i++){\r\n+        int v = dfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsTree[i].first==v && i<bfsAll.size()){\r\n+            cout<<dfsTree[i].second;\r\n+            i = i+1;\r\n+            if(dfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"DFS all :\\n\";\r\n+\r\n+    for(int i=0;i<dfsAll.size();i++){\r\n+        int v = dfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsAll[i].first==v){\r\n+            cout<<dfsAll[i].second;\r\n+            i = i+1;\r\n+            if(dfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n+\r\n+    delete[]adj;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686153920471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+#include<bits/stdc++.h>\r\n+#include\"BFSDFS.h\"\r\n+#include\"CheckCycle.h\"\r\n+using namespace std;\r\n+int main(){\r\n+\r\n+    freopen(\"input.txt\", \"r\", stdin);\r\n+    freopen(\"output.txt\", \"w\", stdout);\r\n+\r\n+\r\n+    int n,m,start;\r\n+    cin>>n>>m;\r\n+    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n+    for(int i=0;i<m;i++){\r\n+        int u,v;\r\n+        double w;\r\n+        cin>>u>>v>>w;\r\n+        addEdge(adj,u,v,w);\r\n+    }\r\n+    print(adj,n);\r\n+\r\n+    cin>>start;\r\n+\r\n+    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n+    \r\n+    cout<<\"BFS Tree : \\n\";\r\n+\r\n+\r\n+    for(int i=0;i<bfsTree.size();i++){\r\n+        int v = bfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsTree[i].first==v && i<bfsTree.size()){\r\n+            cout<<bfsTree[i].second;\r\n+            i = i+1;\r\n+            if(bfsTree[i].first == v && i<bfsTree.size())cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"BFS all :\\n\";\r\n+\r\n+    for(int i=0;i<bfsAll.size();i++){\r\n+        int v = bfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsAll[i].first==v && i<bfsAll.size()){\r\n+            cout<<bfsAll[i].second;\r\n+            i = i+1;\r\n+            if(bfsAll[i].first == v && i<bfsAll.size())cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n+    \r\n+    cout<<\"DFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<dfsTree.size();i++){\r\n+        int v = dfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsTree[i].first==v && i<dfs.size()){\r\n+            cout<<dfsTree[i].second;\r\n+            i = i+1;\r\n+            if(dfsTree[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"DFS all :\\n\";\r\n+\r\n+    for(int i=0;i<dfsAll.size();i++){\r\n+        int v = dfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsAll[i].first==v){\r\n+            cout<<dfsAll[i].second;\r\n+            i = i+1;\r\n+            if(dfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n+\r\n+    delete[]adj;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686153928783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+#include<bits/stdc++.h>\r\n+#include\"BFSDFS.h\"\r\n+#include\"CheckCycle.h\"\r\n+using namespace std;\r\n+int main(){\r\n+\r\n+    freopen(\"input.txt\", \"r\", stdin);\r\n+    freopen(\"output.txt\", \"w\", stdout);\r\n+\r\n+\r\n+    int n,m,start;\r\n+    cin>>n>>m;\r\n+    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n+    for(int i=0;i<m;i++){\r\n+        int u,v;\r\n+        double w;\r\n+        cin>>u>>v>>w;\r\n+        addEdge(adj,u,v,w);\r\n+    }\r\n+    print(adj,n);\r\n+\r\n+    cin>>start;\r\n+\r\n+    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n+    \r\n+    cout<<\"BFS Tree : \\n\";\r\n+\r\n+\r\n+    for(int i=0;i<bfsTree.size();i++){\r\n+        int v = bfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsTree[i].first==v && i<bfsTree.size()){\r\n+            cout<<bfsTree[i].second;\r\n+            i = i+1;\r\n+            if(bfsTree[i].first == v && i<bfsTree.size())cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"BFS all :\\n\";\r\n+\r\n+    for(int i=0;i<bfsAll.size();i++){\r\n+        int v = bfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsAll[i].first==v && i<bfsAll.size()){\r\n+            cout<<bfsAll[i].second;\r\n+            i = i+1;\r\n+            if(bfsAll[i].first == v && i<bfsAll.size())cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n+    \r\n+    cout<<\"DFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<dfsTree.size();i++){\r\n+        int v = dfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsTree[i].first==v && i<dfsTree.size()){\r\n+            cout<<dfsTree[i].second;\r\n+            i = i+1;\r\n+            if(dfsTree[i].first == v && i<dfsTree.size())cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"DFS all :\\n\";\r\n+\r\n+    for(int i=0;i<dfsAll.size();i++){\r\n+        int v = dfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsAll[i].first==v){\r\n+            cout<<dfsAll[i].second;\r\n+            i = i+1;\r\n+            if(dfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n+\r\n+    delete[]adj;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686153934728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+#include<bits/stdc++.h>\r\n+#include\"BFSDFS.h\"\r\n+#include\"CheckCycle.h\"\r\n+using namespace std;\r\n+int main(){\r\n+\r\n+    freopen(\"input.txt\", \"r\", stdin);\r\n+    freopen(\"output.txt\", \"w\", stdout);\r\n+\r\n+\r\n+    int n,m,start;\r\n+    cin>>n>>m;\r\n+    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n+    for(int i=0;i<m;i++){\r\n+        int u,v;\r\n+        double w;\r\n+        cin>>u>>v>>w;\r\n+        addEdge(adj,u,v,w);\r\n+    }\r\n+    print(adj,n);\r\n+\r\n+    cin>>start;\r\n+\r\n+    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n+    \r\n+    cout<<\"BFS Tree : \\n\";\r\n+\r\n+\r\n+    for(int i=0;i<bfsTree.size();i++){\r\n+        int v = bfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsTree[i].first==v && i<bfsTree.size()){\r\n+            cout<<bfsTree[i].second;\r\n+            i = i+1;\r\n+            if(bfsTree[i].first == v && i<bfsTree.size())cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"BFS all :\\n\";\r\n+\r\n+    for(int i=0;i<bfsAll.size();i++){\r\n+        int v = bfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(bfsAll[i].first==v && i<bfsAll.size()){\r\n+            cout<<bfsAll[i].second;\r\n+            i = i+1;\r\n+            if(bfsAll[i].first == v && i<bfsAll.size())cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n+    \r\n+    cout<<\"DFS Tree : \\n\";\r\n+\r\n+    for(int i=0;i<dfsTree.size();i++){\r\n+        int v = dfsTree[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsTree[i].first==v && i<dfsTree.size()){\r\n+            cout<<dfsTree[i].second;\r\n+            i = i+1;\r\n+            if(dfsTree[i].first == v && i<dfsTree.size())cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n+    \r\n+\r\n+    cout<<\"DFS all :\\n\";\r\n+\r\n+    for(int i=0;i<dfsAll.size();i++){\r\n+        int v = dfsAll[i].first;\r\n+        cout<<v<<\" -> \";\r\n+        while(dfsAll[i].first==v ){\r\n+            cout<<dfsAll[i].second;\r\n+            i = i+1;\r\n+            if(dfsAll[i].first == v)cout<<\",\";\r\n+        }\r\n+        i--;\r\n+        cout<<endl;\r\n+    }\r\n+\r\n+    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n+\r\n+    delete[]adj;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686153942082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n \r\n     for(int i=0;i<dfsAll.size();i++){\r\n         int v = dfsAll[i].first;\r\n         cout<<v<<\" -> \";\r\n-        while(dfsAll[i].first==v ){\r\n+        while(dfsAll[i].first==v && i<dfsAll.size()){\r\n             cout<<dfsAll[i].second;\r\n             i = i+1;\r\n             if(dfsAll[i].first == v)cout<<\",\";\r\n         }\r\n@@ -90,569 +90,5 @@\n \r\n     cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n \r\n     delete[]adj;\r\n-}\n-#include<bits/stdc++.h>\r\n-#include\"BFSDFS.h\"\r\n-#include\"CheckCycle.h\"\r\n-using namespace std;\r\n-int main(){\r\n-\r\n-    freopen(\"input.txt\", \"r\", stdin);\r\n-    freopen(\"output.txt\", \"w\", stdout);\r\n-\r\n-\r\n-    int n,m,start;\r\n-    cin>>n>>m;\r\n-    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n-    for(int i=0;i<m;i++){\r\n-        int u,v;\r\n-        double w;\r\n-        cin>>u>>v>>w;\r\n-        addEdge(adj,u,v,w);\r\n-    }\r\n-    print(adj,n);\r\n-\r\n-    cin>>start;\r\n-\r\n-    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n-    \r\n-    cout<<\"BFS Tree : \\n\";\r\n-\r\n-\r\n-    for(int i=0;i<bfsTree.size();i++){\r\n-        int v = bfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsTree[i].first==v && i<bfsTree.size()){\r\n-            cout<<bfsTree[i].second;\r\n-            i = i+1;\r\n-            if(bfsTree[i].first == v && i<bfsTree.size())cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"BFS all :\\n\";\r\n-\r\n-    for(int i=0;i<bfsAll.size();i++){\r\n-        int v = bfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsAll[i].first==v && i<bfsAll.size()){\r\n-            cout<<bfsAll[i].second;\r\n-            i = i+1;\r\n-            if(bfsAll[i].first == v && i<bfsAll.size())cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n-    \r\n-    cout<<\"DFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<dfsTree.size();i++){\r\n-        int v = dfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsTree[i].first==v && i<dfsTree.size()){\r\n-            cout<<dfsTree[i].second;\r\n-            i = i+1;\r\n-            if(dfsTree[i].first == v && i<dfsTree.size())cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"DFS all :\\n\";\r\n-\r\n-    for(int i=0;i<dfsAll.size();i++){\r\n-        int v = dfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsAll[i].first==v){\r\n-            cout<<dfsAll[i].second;\r\n-            i = i+1;\r\n-            if(dfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n-\r\n-    delete[]adj;\r\n-}\n-#include<bits/stdc++.h>\r\n-#include\"BFSDFS.h\"\r\n-#include\"CheckCycle.h\"\r\n-using namespace std;\r\n-int main(){\r\n-\r\n-    freopen(\"input.txt\", \"r\", stdin);\r\n-    freopen(\"output.txt\", \"w\", stdout);\r\n-\r\n-\r\n-    int n,m,start;\r\n-    cin>>n>>m;\r\n-    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n-    for(int i=0;i<m;i++){\r\n-        int u,v;\r\n-        double w;\r\n-        cin>>u>>v>>w;\r\n-        addEdge(adj,u,v,w);\r\n-    }\r\n-    print(adj,n);\r\n-\r\n-    cin>>start;\r\n-\r\n-    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n-    \r\n-    cout<<\"BFS Tree : \\n\";\r\n-\r\n-\r\n-    for(int i=0;i<bfsTree.size();i++){\r\n-        int v = bfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsTree[i].first==v && i<bfsTree.size()){\r\n-            cout<<bfsTree[i].second;\r\n-            i = i+1;\r\n-            if(bfsTree[i].first == v && i<bfsTree.size())cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"BFS all :\\n\";\r\n-\r\n-    for(int i=0;i<bfsAll.size();i++){\r\n-        int v = bfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsAll[i].first==v && i<bfsAll.size()){\r\n-            cout<<bfsAll[i].second;\r\n-            i = i+1;\r\n-            if(bfsAll[i].first == v && i<bfsAll.size())cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n-    \r\n-    cout<<\"DFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<dfsTree.size();i++){\r\n-        int v = dfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsTree[i].first==v && i<dfs.size()){\r\n-            cout<<dfsTree[i].second;\r\n-            i = i+1;\r\n-            if(dfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"DFS all :\\n\";\r\n-\r\n-    for(int i=0;i<dfsAll.size();i++){\r\n-        int v = dfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsAll[i].first==v){\r\n-            cout<<dfsAll[i].second;\r\n-            i = i+1;\r\n-            if(dfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n-\r\n-    delete[]adj;\r\n-}\n-#include<bits/stdc++.h>\r\n-#include\"BFSDFS.h\"\r\n-#include\"CheckCycle.h\"\r\n-using namespace std;\r\n-int main(){\r\n-\r\n-    freopen(\"input.txt\", \"r\", stdin);\r\n-    freopen(\"output.txt\", \"w\", stdout);\r\n-\r\n-\r\n-    int n,m,start;\r\n-    cin>>n>>m;\r\n-    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n-    for(int i=0;i<m;i++){\r\n-        int u,v;\r\n-        double w;\r\n-        cin>>u>>v>>w;\r\n-        addEdge(adj,u,v,w);\r\n-    }\r\n-    print(adj,n);\r\n-\r\n-    cin>>start;\r\n-\r\n-    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n-    \r\n-    cout<<\"BFS Tree : \\n\";\r\n-\r\n-\r\n-    for(int i=0;i<bfsTree.size();i++){\r\n-        int v = bfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsTree[i].first==v && i<bfsTree.size()){\r\n-            cout<<bfsTree[i].second;\r\n-            i = i+1;\r\n-            if(bfsTree[i].first == v && i<bfsTree.size())cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"BFS all :\\n\";\r\n-\r\n-    for(int i=0;i<bfsAll.size();i++){\r\n-        int v = bfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsAll[i].first==v && i<bfsAll.size()){\r\n-            cout<<bfsAll[i].second;\r\n-            i = i+1;\r\n-            if(bfsAll[i].first == v && i<bfsAll.size())cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n-    \r\n-    cout<<\"DFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<dfsTree.size();i++){\r\n-        int v = dfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsTree[i].first==v && i<bfsAll.size()){\r\n-            cout<<dfsTree[i].second;\r\n-            i = i+1;\r\n-            if(dfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"DFS all :\\n\";\r\n-\r\n-    for(int i=0;i<dfsAll.size();i++){\r\n-        int v = dfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsAll[i].first==v){\r\n-            cout<<dfsAll[i].second;\r\n-            i = i+1;\r\n-            if(dfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n-\r\n-    delete[]adj;\r\n-}\n-#include<bits/stdc++.h>\r\n-#include\"BFSDFS.h\"\r\n-#include\"CheckCycle.h\"\r\n-using namespace std;\r\n-int main(){\r\n-\r\n-    freopen(\"input.txt\", \"r\", stdin);\r\n-    freopen(\"output.txt\", \"w\", stdout);\r\n-\r\n-\r\n-    int n,m,start;\r\n-    cin>>n>>m;\r\n-    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n-    for(int i=0;i<m;i++){\r\n-        int u,v;\r\n-        double w;\r\n-        cin>>u>>v>>w;\r\n-        addEdge(adj,u,v,w);\r\n-    }\r\n-    print(adj,n);\r\n-\r\n-    cin>>start;\r\n-\r\n-    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n-    \r\n-    cout<<\"BFS Tree : \\n\";\r\n-\r\n-\r\n-    for(int i=0;i<bfsTree.size();i++){\r\n-        int v = bfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsTree[i].first==v && i<bfsTree.size()){\r\n-            cout<<bfsTree[i].second;\r\n-            i = i+1;\r\n-            if(bfsTree[i].first == v && i<bfsTree.size())cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"BFS all :\\n\";\r\n-\r\n-    for(int i=0;i<bfsAll.size();i++){\r\n-        int v = bfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsAll[i].first==v && i<bfsAll.size()){\r\n-            cout<<bfsAll[i].second;\r\n-            i = i+1;\r\n-            if(bfsAll[i].first == v && i<bfsAll.size())cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n-    \r\n-    cout<<\"DFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<dfsTree.size();i++){\r\n-        int v = dfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsTree[i].first==v){\r\n-            cout<<dfsTree[i].second;\r\n-            i = i+1;\r\n-            if(dfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"DFS all :\\n\";\r\n-\r\n-    for(int i=0;i<dfsAll.size();i++){\r\n-        int v = dfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsAll[i].first==v){\r\n-            cout<<dfsAll[i].second;\r\n-            i = i+1;\r\n-            if(dfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n-\r\n-    delete[]adj;\r\n-}\n-#include<bits/stdc++.h>\r\n-#include\"BFSDFS.h\"\r\n-#include\"CheckCycle.h\"\r\n-using namespace std;\r\n-int main(){\r\n-\r\n-    freopen(\"input.txt\", \"r\", stdin);\r\n-    freopen(\"output.txt\", \"w\", stdout);\r\n-\r\n-\r\n-    int n,m,start;\r\n-    cin>>n>>m;\r\n-    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n-    for(int i=0;i<m;i++){\r\n-        int u,v;\r\n-        double w;\r\n-        cin>>u>>v>>w;\r\n-        addEdge(adj,u,v,w);\r\n-    }\r\n-    print(adj,n);\r\n-\r\n-    cin>>start;\r\n-\r\n-    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n-    \r\n-    cout<<\"BFS Tree : \\n\";\r\n-\r\n-\r\n-    for(int i=0;i<bfsTree.size();i++){\r\n-        int v = bfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsTree[i].first==v && i<bfsTree.size()){\r\n-            cout<<bfsTree[i].second;\r\n-            i = i+1;\r\n-            if(bfsTree[i].first == v && i<bfsTree.size())cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"BFS all :\\n\";\r\n-\r\n-    for(int i=0;i<bfsAll.size();i++){\r\n-        int v = bfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsAll[i].first==v && i<bfsAll.size()){\r\n-            cout<<bfsAll[i].second;\r\n-            i = i+1;\r\n-            if(bfsTree[i].first == v && i<bfsTree.size())cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n-    \r\n-    cout<<\"DFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<dfsTree.size();i++){\r\n-        int v = dfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsTree[i].first==v){\r\n-            cout<<dfsTree[i].second;\r\n-            i = i+1;\r\n-            if(dfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"DFS all :\\n\";\r\n-\r\n-    for(int i=0;i<dfsAll.size();i++){\r\n-        int v = dfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsAll[i].first==v){\r\n-            cout<<dfsAll[i].second;\r\n-            i = i+1;\r\n-            if(dfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n-\r\n-    delete[]adj;\r\n-}\n-#include<bits/stdc++.h>\r\n-#include\"BFSDFS.h\"\r\n-#include\"CheckCycle.h\"\r\n-using namespace std;\r\n-int main(){\r\n-\r\n-    freopen(\"input.txt\", \"r\", stdin);\r\n-    freopen(\"output.txt\", \"w\", stdout);\r\n-\r\n-\r\n-    int n,m,start;\r\n-    cin>>n>>m;\r\n-    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n-    for(int i=0;i<m;i++){\r\n-        int u,v;\r\n-        double w;\r\n-        cin>>u>>v>>w;\r\n-        addEdge(adj,u,v,w);\r\n-    }\r\n-    print(adj,n);\r\n-\r\n-    cin>>start;\r\n-\r\n-    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n-    \r\n-    cout<<\"BFS Tree : \\n\";\r\n-\r\n-\r\n-    for(int i=0;i<bfsTree.size();i++){\r\n-        int v = bfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsTree[i].first==v && i<bfsTree.size()){\r\n-            cout<<bfsTree[i].second;\r\n-            i = i+1;\r\n-            if(bfsTree[i].first == v && i<bfsTree.size())cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"BFS all :\\n\";\r\n-\r\n-    for(int i=0;i<bfsAll.size();i++){\r\n-        int v = bfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(bfsAll[i].first==v && i<bfsTree.size()){\r\n-            cout<<bfsTree[i].second;\r\n-            i = i+1;\r\n-            if(bfsTree[i].first == v && i<bfsTree.size())cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n-    \r\n-    cout<<\"DFS Tree : \\n\";\r\n-\r\n-    for(int i=0;i<dfsTree.size();i++){\r\n-        int v = dfsTree[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsTree[i].first==v){\r\n-            cout<<dfsTree[i].second;\r\n-            i = i+1;\r\n-            if(dfsTree[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n-    \r\n-\r\n-    cout<<\"DFS all :\\n\";\r\n-\r\n-    for(int i=0;i<dfsAll.size();i++){\r\n-        int v = dfsAll[i].first;\r\n-        cout<<v<<\" -> \";\r\n-        while(dfsAll[i].first==v){\r\n-            cout<<dfsAll[i].second;\r\n-            i = i+1;\r\n-            if(dfsAll[i].first == v)cout<<\",\";\r\n-        }\r\n-        i--;\r\n-        cout<<endl;\r\n-    }\r\n-\r\n-    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n-\r\n-    delete[]adj;\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686153950985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n         cout<<v<<\" -> \";\r\n         while(dfsAll[i].first==v && i<dfsAll.size()){\r\n             cout<<dfsAll[i].second;\r\n             i = i+1;\r\n-            if(dfsAll[i].first == v)cout<<\",\";\r\n+            if(dfsAll[i].first == v && i<dfsAll.size())cout<<\",\";\r\n         }\r\n         i--;\r\n         cout<<endl;\r\n     }\r\n"
                }
            ],
            "date": 1686152439407,
            "name": "Commit-0",
            "content": "\r\nint main(){\r\n\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n\r\n\r\n    int n,m,start;\r\n    cin>>n>>m;\r\n    vector<pair<int,double>> *adj = new vector<pair<int,double>>[n];\r\n    for(int i=0;i<m;i++){\r\n        int u,v;\r\n        double w;\r\n        cin>>u>>v>>w;\r\n        addEdge(adj,u,v,w);\r\n    }\r\n    print(adj,n);\r\n\r\n    cin>>start;\r\n\r\n    vector<pair<int,int>> bfsTree = BFStraversal(adj,n,start);\r\n    \r\n    cout<<\"BFS Tree : \\n\";\r\n\r\n    for(int i=0;i<bfsTree.size();i++){\r\n        int v = bfsTree[i].first;\r\n        cout<<v<<\" -> \";\r\n        while(bfsTree[i].first==v){\r\n            cout<<bfsTree[i].second;\r\n            i = i+1;\r\n            if(bfsTree[i].first == v)cout<<\",\";\r\n        }\r\n        i--;\r\n        cout<<endl;\r\n    }\r\n\r\n    vector<pair<int,int>> bfsAll = BFSAll(adj,n);\r\n    \r\n\r\n    cout<<\"BFS all :\\n\";\r\n\r\n    for(int i=0;i<bfsAll.size();i++){\r\n        int v = bfsAll[i].first;\r\n        cout<<v<<\" -> \";\r\n        while(bfsAll[i].first==v){\r\n            cout<<bfsAll[i].second;\r\n            i = i+1;\r\n            if(bfsAll[i].first == v)cout<<\",\";\r\n        }\r\n        i--;\r\n        cout<<endl;\r\n    }\r\n\r\n    vector<pair<int,int>> dfsTree = DFSTraversal(adj,n,start);\r\n    \r\n    cout<<\"DFS Tree : \\n\";\r\n\r\n    for(int i=0;i<dfsTree.size();i++){\r\n        int v = dfsTree[i].first;\r\n        cout<<v<<\" -> \";\r\n        while(dfsTree[i].first==v){\r\n            cout<<dfsTree[i].second;\r\n            i = i+1;\r\n            if(dfsTree[i].first == v)cout<<\",\";\r\n        }\r\n        i--;\r\n        cout<<endl;\r\n    }\r\n\r\n    vector<pair<int,int>> dfsAll = DFSAll(adj,n);\r\n    \r\n\r\n    cout<<\"DFS all :\\n\";\r\n\r\n    for(int i=0;i<dfsAll.size();i++){\r\n        int v = dfsAll[i].first;\r\n        cout<<v<<\" -> \";\r\n        while(dfsAll[i].first==v){\r\n            cout<<dfsAll[i].second;\r\n            i = i+1;\r\n            if(dfsAll[i].first == v)cout<<\",\";\r\n        }\r\n        i--;\r\n        cout<<endl;\r\n    }\r\n\r\n    cout<<\"Cycle : \"<<cycle(adj,n)<<endl;\r\n\r\n    delete[]adj;\r\n}"
        }
    ]
}