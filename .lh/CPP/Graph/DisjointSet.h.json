{
    "sourceFile": "CPP/Graph/DisjointSet.h",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 27,
            "patches": [
                {
                    "date": 1685903256623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1685903261668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1 @@\n+#ic\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903268413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1 @@\n+class {}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903274372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1 @@\n+class Disjoint Set{}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903279775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,2 @@\n+\r\n+class DisjointSet{}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903287788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,2 @@\n-\r\n-class DisjointSet{}\n-class Disjoint Set{}\n-class {}\n-#ic\n\\ No newline at end of file\n+#include<bits\r\n+class DisjointSet{}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903293662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,4 @@\n+#include<bits/stdc++.h>\r\n+class DisjointSet{\r\n+    \r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903299462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,4 @@\n+#include<bits/stdc++.h>\r\n+class DisjointSet{\r\n+    int rank\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903304742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,5 @@\n+#include<bits/stdc++.h>\r\n+class DisjointSet{\r\n+    int rank[];\r\n+    int size[];\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903318022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,4 @@\n #include<bits/stdc++.h>\r\n class DisjointSet{\r\n-    int rank[];\r\n-    int size[];\r\n-}\n-#include<bits/stdc++.h>\r\n-class DisjointSet{\r\n-    int rank\r\n-}\n-#include<bits/stdc++.h>\r\n-class DisjointSet{\r\n-    \r\n-}\n-#include<bits\r\n-class DisjointSet{}\n\\ No newline at end of file\n+    vector \r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903325881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,4 @@\n+#include<bits/stdc++.h>\r\n+class DisjointSet{\r\n+    vector <int> rank,parent\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903339632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,5 @@\n+#include<bits/stdc++.h>\r\n+class DisjointSet{\r\n+    vector <int> rank,parent;\r\n+\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903368195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,23 @@\n #include<bits/stdc++.h>\r\n+using namespace std;\r\n+\r\n+int main()\r\n+{\r\n+    int n;\r\n+    cin>>n;\r\n+    int arr[n];\r\n+    for(int i=0;i<n;i++)\r\n+    {\r\n+        cin>>arr[i];\r\n+    }\r\n+    sort(arr,arr+n);\r\n\\ No newline at end of file\n+    for(int i=0;i<n;i++)\r\n+    {\r\n+        cout<<arr[i]<<\" \";\r\n+    }\r\n+    return 0;\r\n+}\r\n class DisjointSet{\r\n     vector <int> rank,parent;\r\n \r\n-}\n-#include<bits/stdc++.h>\r\n-class DisjointSet{\r\n-    vector <int> rank,parent\r\n-}\n-#include<bits/stdc++.h>\r\n-class DisjointSet{\r\n-    vector \r\n-}\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903374041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,23 +1,6 @@\n #include<bits/stdc++.h>\r\n using namespace std;\r\n-\r\n-int main()\r\n-{\r\n-    int n;\r\n-    cin>>n;\r\n-    int arr[n];\r\n-    for(int i=0;i<n;i++)\r\n-    {\r\n-        cin>>arr[i];\r\n-    }\r\n-    sort(arr,arr+n);\r\n-    for(int i=0;i<n;i++)\r\n-    {\r\n-        cout<<arr[i]<<\" \";\r\n-    }\r\n-    return 0;\r\n-}\r\n class DisjointSet{\r\n     vector <int> rank,parent;\r\n \r\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903393657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n #include<bits/stdc++.h>\r\n using namespace std;\r\n class DisjointSet{\r\n     vector <int> rank,parent;\r\n+public:\r\n \r\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903399996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,8 @@\n+#include<bits/stdc++.h>\r\n+using namespace std;\r\n+class DisjointSet{\r\n+    vector <int> rank,parent;\r\n+public:\r\n+    DisjointSet(int n){\r\n+    }\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903405086,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,9 @@\n+#include<bits/stdc++.h>\r\n+using namespace std;\r\n+class DisjointSet{\r\n+    vector <int> rank,parent;\r\n+public:\r\n+    DisjointSet(int n){\r\n+        \r\n+    }\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903414512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,12 @@\n+#include<bits/stdc++.h>\r\n+using namespace std;\r\n+class DisjointSet{\r\n+    vector <int> rank,parent;\r\n+public:\r\n+    DisjointSet(int n){\r\n+        rank.resize(n);\r\n+        parent.resize(n);\r\n+                for(int i=0;i<n;i++)\r\n+                    parent[i]=i;\r\n+    }\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903429616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,12 @@\n+#include<bits/stdc++.h>\r\n+using namespace std;\r\n+class DisjointSet{\r\n+    vector <int> rank,parent;\r\n+public:\r\n+    DisjointSet(int n){\r\n+        rank.resize(n+1);\r\n+        parent.resize(n);\r\n+                for(int i=0;i<n;i++)\r\n+                    parent[i]=i;\r\n+    }\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903440034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,12 @@\n+#include<bits/stdc++.h>\r\n+using namespace std;\r\n+class DisjointSet{\r\n+    vector <int> rank,parent;\r\n+public:\r\n+    DisjointSet(int n){\r\n+        rank.resize(n+1,0);\r\n+        parent.resize(n);\r\n+        for(int i=0;i<n;i++)\r\n+            parent[i]=i;\r\n+    }\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903449513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,11 @@\n+#include<bits/stdc++.h>\r\n+using namespace std;\r\n+class DisjointSet{\r\n+    vector <int> rank,parent;\r\n+public:\r\n+    DisjointSet(int n){\r\n+        rank.resize(n+1,0);\r\n+        parent.resize(n);\r\n+        for(int i=0;i<=n;i++)parent[i]=i;\r\n+    }\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903458286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,65 +7,7 @@\n         rank.resize(n+1,0);\r\n         parent.resize(n);\r\n         for(int i=0;i<=n;i++)parent[i]=i;\r\n     }\r\n-};\n-#include<bits/stdc++.h>\r\n-using namespace std;\r\n-class DisjointSet{\r\n-    vector <int> rank,parent;\r\n-public:\r\n-    DisjointSet(int n){\r\n-        rank.resize(n+1,0);\r\n-        parent.resize(n);\r\n-        for(int i=0;i<n;i++)\r\n-            parent[i]=i;\r\n-    }\r\n-};\n-#include<bits/stdc++.h>\r\n-using namespace std;\r\n-class DisjointSet{\r\n-    vector <int> rank,parent;\r\n-public:\r\n-    DisjointSet(int n){\r\n-        rank.resize(n+1);\r\n-        parent.resize(n);\r\n-                for(int i=0;i<n;i++)\r\n-                    parent[i]=i;\r\n-    }\r\n-};\n-#include<bits/stdc++.h>\r\n-using namespace std;\r\n-class DisjointSet{\r\n-    vector <int> rank,parent;\r\n-public:\r\n-    DisjointSet(int n){\r\n-        rank.resize(n);\r\n-        parent.resize(n);\r\n-                for(int i=0;i<n;i++)\r\n-                    parent[i]=i;\r\n-    }\r\n-};\n-#include<bits/stdc++.h>\r\n-using namespace std;\r\n-class DisjointSet{\r\n-    vector <int> rank,parent;\r\n-public:\r\n-    DisjointSet(int n){\r\n-        \r\n-    }\r\n-};\n-#include<bits/stdc++.h>\r\n-using namespace std;\r\n-class DisjointSet{\r\n-    vector <int> rank,parent;\r\n-public:\r\n-    DisjointSet(int n){\r\n-    }\r\n-};\n-#include<bits/stdc++.h>\r\n-using namespace std;\r\n-class DisjointSet{\r\n-    vector <int> rank,parent;\r\n-public:\r\n \r\n+    int \r\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903465609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,13 @@\n+#include<bits/stdc++.h>\r\n+using namespace std;\r\n+class DisjointSet{\r\n+    vector <int> rank,parent;\r\n+public:\r\n+    DisjointSet(int n){\r\n+        rank.resize(n+1,0);\r\n+        parent.resize(n);\r\n+        for(int i=0;i<=n;i++)parent[i]=i;\r\n+    }\r\n+\r\n+    int findUp\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903471533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,13 @@\n+#include<bits/stdc++.h>\r\n+using namespace std;\r\n+class DisjointSet{\r\n+    vector <int> rank,parent;\r\n+public:\r\n+    DisjointSet(int n){\r\n+        rank.resize(n+1,0);\r\n+        parent.resize(n);\r\n+        for(int i=0;i<=n;i++)parent[i]=i;\r\n+    }\r\n+\r\n+    int findUp(int node)\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903478558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,32 +8,8 @@\n         parent.resize(n);\r\n         for(int i=0;i<=n;i++)parent[i]=i;\r\n     }\r\n \r\n-    int findUp(int node)\r\n-};\n-#include<bits/stdc++.h>\r\n-using namespace std;\r\n-class DisjointSet{\r\n-    vector <int> rank,parent;\r\n-public:\r\n-    DisjointSet(int n){\r\n-        rank.resize(n+1,0);\r\n-        parent.resize(n);\r\n-        for(int i=0;i<=n;i++)parent[i]=i;\r\n+    int findUp(int node){\r\n+        if())\r\n     }\r\n-\r\n-    int findUp\r\n-};\n-#include<bits/stdc++.h>\r\n-using namespace std;\r\n-class DisjointSet{\r\n-    vector <int> rank,parent;\r\n-public:\r\n-    DisjointSet(int n){\r\n-        rank.resize(n+1,0);\r\n-        parent.resize(n);\r\n-        for(int i=0;i<=n;i++)parent[i]=i;\r\n-    }\r\n-\r\n-    int \r\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903512345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,7 +9,10 @@\n         for(int i=0;i<=n;i++)parent[i]=i;\r\n     }\r\n \r\n     int findUp(int node){\r\n-        if())\r\n+        if(parent[node]!=node)parent[node]=findUp(parent[node]);\r\n+        return parent[node];\r\n     }\r\n+\r\n+    \r\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903518057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,6 +13,6 @@\n         if(parent[node]!=node)parent[node]=findUp(parent[node]);\r\n         return parent[node];\r\n     }\r\n \r\n-    \r\n+    void Union(int x,int y){\r\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685903526600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,28 @@\n+#include<bits/stdc++.h>\r\n+using namespace std;\r\n+class DisjointSet{\r\n+    vector <int> rank,parent;\r\n+public:\r\n+    DisjointSet(int n){\r\n+        rank.resize(n+1,0);\r\n+        parent.resize(n);\r\n+        for(int i=0;i<=n;i++)parent[i]=i;\r\n+    }\r\n+\r\n+    int findUp(int node){\r\n+        if(parent[node]!=node)parent[node]=findUp(parent[node]);\r\n+        return parent[node];\r\n+    }\r\n+\r\n+    void Union(int x,int y){\r\n+        x=findUp(x);\r\n+        y=findUp(y);\r\n+        if(x!=y){\r\n+            if(rank[x]>rank[y])parent[y]=x;\r\n+            else{\r\n+                parent[x]=y;\r\n+                if(rank[x]==rank[y])rank[y]++;\r\n+            }\r\n+        }\r\n+    }\r\n+};\n\\ No newline at end of file\n"
                }
            ],
            "date": 1685903256623,
            "name": "Commit-0",
            "content": ""
        }
    ]
}