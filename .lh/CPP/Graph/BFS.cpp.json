{
    "sourceFile": "CPP/Graph/BFS.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1685951162588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1685951167761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+\r\n double edgeWeight(vector<pair<int,double>> adj[],int u,int v){\r\n     for(auto x:adj[u]){\r\n         if(x.first==v){\r\n             return x.second;\r\n"
                },
                {
                    "date": 1685951173987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-#\r\n+#i\r\n double edgeWeight(vector<pair<int,double>> adj[],int u,int v){\r\n     for(auto x:adj[u]){\r\n         if(x.first==v){\r\n             return x.second;\r\n"
                },
                {
                    "date": 1685951183061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,33 @@\n+#include <bits/stdc++.h>>\r\n+double edgeWeight(vector<pair<int,double>> adj[],int u,int v){\r\n+    for(auto x:adj[u]){\r\n+        if(x.first==v){\r\n+            return x.second;\r\n+        }\r\n+    }\r\n+    return INFINITY;\t\r\n+}\r\n+\r\n+void rmEdge(vector<pair<int,double>> adj[],int u,int v){\r\n+    for(int i=0;i<adj[u].size();i++){\r\n+        if(adj[u][i].first == v)adj[u].erase(adj[u].begin()+i);\r\n+    }\r\n+}\r\n+\r\n+void addEdge(vector<pair<int,double>> adj[],int u,int v,double w){\r\n+    if(edgeWeight(adj,u,v) == INFINITY)adj[u].push_back({v,w});\r\n+    else{\r\n+        rmEdge(adj,u,v);\r\n+        adj[u].push_back({v,w});\r\n+    }\r\n+}\r\n+\r\n+void print(vector<pair<int,double>> adj[],int n){\r\n+    for(int i=0;i<n;i++){\r\n+        cout<<i<<\" -> \";\r\n+        for(auto x:adj[i]){\r\n+            cout<<x.first<<\"(\"<<x.second<<\") \";\r\n+        }\r\n+        cout<<endl;\r\n+    }\r\n+}\r\n"
                }
            ],
            "date": 1685951162588,
            "name": "Commit-0",
            "content": "double edgeWeight(vector<pair<int,double>> adj[],int u,int v){\r\n    for(auto x:adj[u]){\r\n        if(x.first==v){\r\n            return x.second;\r\n        }\r\n    }\r\n    return INFINITY;\t\r\n}\r\n\r\nvoid rmEdge(vector<pair<int,double>> adj[],int u,int v){\r\n    for(int i=0;i<adj[u].size();i++){\r\n        if(adj[u][i].first == v)adj[u].erase(adj[u].begin()+i);\r\n    }\r\n}\r\n\r\nvoid addEdge(vector<pair<int,double>> adj[],int u,int v,double w){\r\n    if(edgeWeight(adj,u,v) == INFINITY)adj[u].push_back({v,w});\r\n    else{\r\n        rmEdge(adj,u,v);\r\n        adj[u].push_back({v,w});\r\n    }\r\n}\r\n\r\nvoid print(vector<pair<int,double>> adj[],int n){\r\n    for(int i=0;i<n;i++){\r\n        cout<<i<<\" -> \";\r\n        for(auto x:adj[i]){\r\n            cout<<x.first<<\"(\"<<x.second<<\") \";\r\n        }\r\n        cout<<endl;\r\n    }\r\n}\r\n"
        }
    ]
}